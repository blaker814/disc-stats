{"version":3,"sources":["providers/UserProvider.js","pages/Login.js","pages/Register.js","components/ScoreBar.js","components/ScorecardCard.js","utils/dateFormatter.js","utils/groupBy.js","pages/Home.js","components/CourseCard.js","utils/getWindowDimensions.js","components/CourseSearch.js","pages/CourseManager.js","components/DiscCard.js","components/DiscFilter.js","pages/DiscManager.js","pages/ScorecardManager.js","pages/DiscForm.js","pages/CourseDetails.js","pages/HoleDetails.js","pages/ShotForm.js","components/ShotCard.js","pages/HoleOverview.js","components/HoleCard.js","pages/RoundOverview.js","components/ApplicationViews.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserProvider","props","apiUrl","user","localStorage","getItem","useState","isLoggedIn","setIsLoggedIn","isFirebaseReady","setIsFirebaseReady","useEffect","firebase","auth","onAuthStateChanged","u","getToken","currentUser","getIdToken","getUser","firebaseUserId","then","token","fetch","method","headers","Authorization","resp","json","saveUser","body","JSON","stringify","Provider","value","login","email","pw","signInWithEmailAndPassword","signInResponse","uid","status","setItem","logout","signOut","clear","register","password","createUserWithEmailAndPassword","createResponse","savedUser","getCurrentUser","parse","children","Spinner","className","Login","useContext","loading","setLoading","setEmail","setPassword","history","useHistory","onSubmit","e","preventDefault","toast","info","name","push","error","catch","err","src","alt","Input","onChange","target","type","placeholder","required","Button","block","color","disabled","style","fontSize","to","Register","setName","confirm","setConfirm","ScoreBar","scoreBreakdown","chartContainer","useRef","params","useParams","names","current","Chartjs","breakdown","data","labels","datasets","minus","birdie","par","bogey","double","plus","backgroundColor","borderColor","borderWidth","options","title","display","text","courseId","holeId","maintainAspectRatio","legend","scales","yAxes","ticks","beginAtZero","chartConfig","ref","ScorecardCard","scorecard","roundScores","setRoundScores","scorecardShots","setScorecardShots","holes","setHoles","score","setScore","isComplete","setIsComplete","id","res","parsedShots","length","findScore","dateString","totalScore","playedAllHoles","every","hole","shotsForHole","filter","ss","penaltyStrokes","forEach","shot","qualityOfShotId","holeScore","Card","course","createDateTime","Intl","DateTimeFormat","day","month","year","format","Date","conditions","label","groupBy","arr","key","reduce","rv","x","Home","scorecards","setScorecards","shots","setShots","setScoreBreakdown","average","setAverage","parsedScorecards","groupByRound","map","holeNum","roundShots","averageScore","Math","round","acc","cur","position","width","height","slice","sc","CourseCard","timesPlayed","setTimesPlayed","location","useLocation","pathname","description","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","CourseSearch","onSearch","searchTerms","setSearchTerms","currentUserId","Form","searchResults","trim","toLowerCase","icon","faSearch","CourseManager","courses","setCourses","parsedCourses","includes","size","faArrowLeft","DiscCard","disc","discShots","setDiscShots","weight","plastic","discType","DiscFilter","DiscManager","discs","setDiscs","filtered","setFiltered","parsedDiscs","subset","onClick","ScorecardManager","DiscForm","discTypes","setDiscTypes","setDisc","pendingDelete","setPendingDelete","isLoading","setIsLoading","discId","userId","discTypeId","handleControlledInputChange","event","newDisc","parseInt","minWidth","maxWidth","faTimes","updateDisc","IsActive","addDisc","FormGroup","row","Label","for","autoFocus","defaultValue","hidden","dt","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","outline","CourseDetails","setCourse","allConditions","setAllConditions","conditionsId","setConditionsId","setPar","scores","setScores","distance","setDistance","best","setBest","parsedCourse","parsedConditions","parsedHoles","holePars","holeLengths","filteredScores","rs","totalAverage","bestScore","min","find","number","c","HoleDetails","setHole","lastDrive","setLastDrive","shotType","setShotType","parsedHole","drives","shotRangeId","drive","shotTypes","mostUsedDisc","highestOccurence","mostUsedShotType","sort","a","b","pop","shotSelection","qualityOfShot","scorecardId","ShotForm","shotRanges","setShotRanges","setShotTypes","setShot","shotSelections","setShotSelections","qualities","setQualities","isChecked","setIsChecked","shotId","shotTypeId","shotSelectionId","isObstructed","addShot","holeComplete","shotNumber","shotNum","newShot","handleSubmit","QualityOfShotId","DiscId","updateShot","sr","st","d","q","check","htmlFor","checked","ShotCard","shotRange","HoleOverview","getTotalShots","i","HoleCard","strokes","RoundOverview","setScorecard","roundScore","setRoundScore","parsedScorecard","shotsPerHole","totalScoreForRound","holeShots","strokesForHole","penaltyStrokesForHole","holeStrokes","ApplicationViews","path","exact","tabs","route","faHome","faTable","faFlag","faDotCircle","Navigation","logoutAndReturn","dark","Navbar","expand","startsWith","Nav","navbar","NavItem","NavLink","NavbarBrand","tag","Link","faSignOutAlt","tab","index","App","closeOnClick","autoClose","hideProgressBar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c41ad116.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserProvider(props) {\r\n    const apiUrl = \"/api/user\";\r\n\r\n    const user = localStorage.getItem(\"user\");\r\n    const [isLoggedIn, setIsLoggedIn] = useState(user !== null);\r\n\r\n    const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((u) => {\r\n            setIsFirebaseReady(true);\r\n        });\r\n    }, []);\r\n\r\n    const login = (email, pw) => {\r\n        return firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, pw)\r\n            .then((signInResponse) => getUser(signInResponse.user.uid))\r\n            .then((user) => {\r\n                if (!user.status) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(user));\r\n                    setIsLoggedIn(true);\r\n                    return user;\r\n                } else {\r\n                    setIsLoggedIn(false);\r\n                    return null;\r\n                }\r\n            });\r\n    };\r\n\r\n    const logout = () => {\r\n        return firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                localStorage.clear();\r\n                setIsLoggedIn(false);\r\n            });\r\n    };\r\n\r\n    const register = (user, password) => {\r\n        return firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(user.email, password)\r\n            .then((createResponse) =>\r\n                saveUser({ ...user, firebaseUserId: createResponse.user.uid })\r\n            )\r\n            .then((savedUser) => {\r\n                localStorage.setItem(\"user\", JSON.stringify(savedUser));\r\n                setIsLoggedIn(true);\r\n                return savedUser;\r\n            });\r\n    };\r\n\r\n    const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n    const getUser = (firebaseUserId) => {\r\n        return getToken().then((token) =>\r\n            fetch(`${apiUrl}/${firebaseUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then((resp) => resp.json())\r\n        );\r\n    };\r\n\r\n    const saveUser = (user) => {\r\n        return getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(user),\r\n            }).then((resp) => resp.json())\r\n        );\r\n    };\r\n\r\n    const getCurrentUser = () => {\r\n        const user = localStorage.getItem(\"user\");\r\n        if (!user) {\r\n            return null;\r\n        }\r\n        return JSON.parse(user);\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                isLoggedIn,\r\n                login,\r\n                logout,\r\n                register,\r\n                getToken,\r\n                getCurrentUser\r\n            }}\r\n        >\r\n            {isFirebaseReady ? (\r\n                props.children\r\n            ) : (\r\n                    <Spinner className=\"app-spinner dark\" />\r\n                )}\r\n        </UserContext.Provider>\r\n    );\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n    const { login } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        login(email, password)\r\n            .then((user) => {\r\n                if (user !== null) {\r\n                    setLoading(false);\r\n                    toast.info(`Welcome back, ${user.name}`);\r\n                    history.push(\"/\");\r\n                } else {\r\n                    setLoading(false);\r\n                    toast.error(\"Your account has been deactivated\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                toast.error(\"Invalid email or password\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"avatar bg-primary\">\r\n                    <img src=\"/disc-logo.png\" alt=\"Avatar\" />\r\n                </div>\r\n                <h2 className=\"text-center\">User Login</h2>\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n                        Sign in\r\n                    </Button>\r\n                </div>\r\n                <div className=\"text-center mt-5\" style={{ fontSize: \"16px\" }}>\r\n                    Don't have an account?\r\n                    <div>\r\n                        <Link to=\"/register\">Sign up here</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Register = () => {\r\n    const { register } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirm) {\r\n            toast.error(\"Passwords do not match\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const profile = {\r\n            name,\r\n            email\r\n        };\r\n        register(profile, password)\r\n            .then((user) => {\r\n                setLoading(false);\r\n                toast.info(`Welcome ${user.name}`);\r\n                history.push(\"/\");\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                toast.error(\"Invalid email\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"avatar bg-primary\">\r\n                    <img src=\"/disc-logo.png\" alt=\"Avatar\" />\r\n                </div>\r\n                <h2 className=\"text-center\">User Register</h2>\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        onChange={(e) => setConfirm(e.target.value)}\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Confirm Password\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n                        Sign Up\r\n                    </Button>\r\n                </div>\r\n                <div className=\"text-center large mt-5\" style={{ fontSize: \"16px\" }}>\r\n                    Already have an account?\r\n                    <div>\r\n                        <Link to=\"/login\">Log in here</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","import React, { useEffect, useRef } from \"react\";\r\nimport Chartjs from \"chart.js\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst chartConfig = (names, breakdown, params) => {\r\n    const labels = [...names];\r\n    const data = [breakdown.minus, breakdown.birdie, breakdown.par, breakdown.bogey, breakdown.double, breakdown.plus];\r\n    const backgroundColor = [\r\n        \"rgba(51, 153, 243, 0.6)\", \"rgba(60, 181, 33, 0.6)\",\r\n        \"rgba(68, 110, 155, 0.6)\", \"rgba(205, 2, 0, 0.6)\",\r\n        \"rgba(212, 117, 0, 0.6)\", \"rgba(153, 153, 153, 0.6)\"\r\n    ];\r\n    const borderColor = [\r\n        \"rgba(51, 153, 243, 1)\", \"rgba(60, 181, 33, 1)\",\r\n        \"rgba(68, 110, 155, 1)\", \"rgba(205, 2, 0, 1)\",\r\n        \"rgba(212, 117, 0, 1)\", \"rgba(153, 153, 153, 1)\"\r\n    ];\r\n\r\n    return ({\r\n        type: \"horizontalBar\",\r\n        data: {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    data: data,\r\n                    backgroundColor: backgroundColor,\r\n                    borderColor: borderColor,\r\n                    borderWidth: 1\r\n                }\r\n            ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: params.courseId ? \"Course Scoring Breakdown\" : params.holeId ? \"Hole Scoring Breakdown\" : \"All Time Score Breakdown\",\r\n                fontSize: 16\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    })\r\n};\r\n\r\nexport const ScoreBar = ({ scoreBreakdown }) => {\r\n    const chartContainer = useRef(null);\r\n    const params = useParams();\r\n    const names = [\"Eagle -\", \"Birdie\", \"Par\", \"Bogey\", \"Dbl Bogey\", \"3+ Bogey\"];\r\n\r\n    useEffect(() => {\r\n        if (chartContainer && chartContainer.current) {\r\n            new Chartjs(chartContainer.current, chartConfig(names, scoreBreakdown, params));\r\n        }\r\n    }, [chartContainer]);\r\n\r\n    return (\r\n        <canvas ref={chartContainer} />\r\n    );\r\n};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"reactstrap\";\r\nimport formatDate from \"../utils/dateFormatter\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\n\r\nexport const ScorecardCard = ({ scorecard, roundScores, setRoundScores }) => {\r\n    const { getToken } = useContext(UserContext);\r\n    const [scorecardShots, setScorecardShots] = useState([]);\r\n    const [holes, setHoles] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [isComplete, setIsComplete] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/shot/scorecard/${scorecard.id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedShots) => {\r\n                    setScorecardShots(parsedShots);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/hole/course/${scorecard.courseId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setHoles(data);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (holes.length && scorecardShots.length) {\r\n            findScore()\r\n        }\r\n\r\n    }, [holes, scorecardShots])\r\n\r\n    useEffect(() => {\r\n        if (score && roundScores) {\r\n            setRoundScores([...roundScores, score])\r\n        }\r\n    }, [score])\r\n\r\n    const findScore = () => {\r\n        let totalScore = 0;\r\n        let playedAllHoles = holes.every(hole => {\r\n            let shotsForHole = scorecardShots.filter(ss => ss.holeId === hole.id)\r\n            if (shotsForHole.length) {\r\n                let penaltyStrokes = 0;\r\n                shotsForHole.forEach(shot => {\r\n                    if (shot.qualityOfShotId === 4) {\r\n                        penaltyStrokes = penaltyStrokes + 1\r\n                    }\r\n                })\r\n                let holeScore = shotsForHole.length + penaltyStrokes - hole.par;\r\n                totalScore = totalScore + holeScore;\r\n            }\r\n            return shotsForHole.length > 0;\r\n        });\r\n        setIsComplete(playedAllHoles);\r\n        setScore(totalScore);\r\n    }\r\n\r\n    return (\r\n        <Link to={scorecardShots.length > 0 ? `/scorecards/${scorecard.id}/overview/edit` : `/scorecards/${scorecard.id}/${holes[0]?.id}`} className=\"card-link\">\r\n            <Card className=\"scorecard-card bg-light mobile-card\">\r\n                <h5 className=\"card-header\"><strong>{scorecard.course.name}</strong></h5>\r\n                <div className=\"col-12 py-3 card-body\">\r\n                    <p className=\"text-left ml-3\"><strong>Date:</strong> {formatDate(scorecard.createDateTime)}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Conditions:</strong> {scorecard.conditions.label}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Score:</strong> {score < 0 ? score : score === 0 ? \"E\" : `+${score}`} {!isComplete && \"(Partial)\"}</p>\r\n                </div>\r\n            </Card >\r\n        </Link>\r\n    );\r\n};","export default function format(dateString) {\r\n    return new Intl.DateTimeFormat(\"en-US\", {\r\n        day: \"numeric\",\r\n        month: \"short\",\r\n        year: \"numeric\",\r\n    }).format(new Date(dateString));\r\n}","export default function groupBy(arr, key) {\r\n    return arr.reduce(function (rv, x) {\r\n        (rv[x[key]] = rv[x[key]] || []).push(x);\r\n        return rv;\r\n    }, []);\r\n};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ScoreBar } from \"../components/ScoreBar\";\r\nimport { ScorecardCard } from \"../components/ScorecardCard\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport groupBy from \"../utils/groupBy\"\r\n\r\nexport const Home = () => {\r\n    const { getToken } = useContext(UserContext);\r\n    const [scorecards, setScorecards] = useState([]);\r\n    const [shots, setShots] = useState([]);\r\n    const [roundScores, setRoundScores] = useState([]);\r\n    const [scoreBreakdown, setScoreBreakdown] = useState();\r\n    const [average, setAverage] = useState();\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/shot/user/${currentUser.id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setShots(data);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/scorecard/user/${currentUser.id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedScorecards) => {\r\n                    setScorecards(parsedScorecards);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shots.length) {\r\n            const groupByHoles = groupBy(shots, \"holeId\");\r\n            const groupByRound = groupByHoles.map(hole => groupBy(hole, \"scorecardId\"));\r\n            const breakdown = {\r\n                minus: 0,\r\n                birdie: 0,\r\n                par: 0,\r\n                bogey: 0,\r\n                double: 0,\r\n                plus: 0\r\n            };\r\n            groupByRound.forEach(holeNum => {\r\n                holeNum.forEach(roundShots => {\r\n                    if (roundShots) {\r\n                        let par = roundShots[0].hole.par;\r\n                        let penaltyStrokes = roundShots.filter(shot => shot.qualityOfShotId === 4).length;\r\n                        switch (roundShots.length + penaltyStrokes - par) {\r\n                            case -4:\r\n                                breakdown.minus = breakdown.minus + 1;\r\n                                break;\r\n                            case -3:\r\n                                breakdown.minus = breakdown.minus + 1;\r\n                                break;\r\n                            case -2:\r\n                                breakdown.minus = breakdown.minus + 1;\r\n                                break;\r\n                            case -1:\r\n                                breakdown.birdie = breakdown.birdie + 1;\r\n                                break;\r\n                            case 0:\r\n                                breakdown.par = breakdown.par + 1;\r\n                                break;\r\n                            case 1:\r\n                                breakdown.bogey = breakdown.bogey + 1;\r\n                                break;\r\n                            case 2:\r\n                                breakdown.double = breakdown.double + 1;\r\n                                break;\r\n                            default:\r\n                                breakdown.plus = breakdown.plus + 1;\r\n                                break;\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            setScoreBreakdown(breakdown);\r\n        }\r\n    }, [shots]);\r\n\r\n    useEffect(() => {\r\n        if (roundScores.length) {\r\n            const averageScore = Math.round(roundScores.reduce((acc, cur) => acc + cur) / scorecards.length);\r\n            setAverage(averageScore);\r\n        }\r\n    }, [roundScores])\r\n\r\n    return (\r\n        <div className=\"m-5\">\r\n            <h3>Welcome {currentUser.name}</h3>\r\n            <div className=\"row justify-content-center\">\r\n                <p className=\"stat\">Rounds played: {scorecards.length}</p>\r\n                <p className=\"stat\">Avg Score: {!average ? \"N/A\" : average < 0 ? average : average === 0 ? \"E\" : `+${average}`}</p>\r\n            </div>\r\n            {scoreBreakdown && (\r\n                <div className=\"ml-n5\" style={{ position: \"relative\", width: \"95vw\", height: \"18em\" }}>\r\n                    <ScoreBar scoreBreakdown={scoreBreakdown} />\r\n                </div>\r\n            )}\r\n            <hr />\r\n            <h4>Recent Rounds</h4>\r\n            <div className=\"row justify-content-center\">\r\n                {scorecards.slice(0, 3).map(sc => {\r\n                    return (\r\n                        <div key={sc.id} className=\"m-4\">\r\n                            <ScorecardCard scorecard={sc} roundScores={roundScores} setRoundScores={setRoundScores} />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Card } from \"reactstrap\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\n\r\nexport const CourseCard = ({ course }) => {\r\n    const { getToken } = useContext(UserContext);\r\n    const [timesPlayed, setTimesPlayed] = useState([]);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/scorecard/course/${course.id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setTimesPlayed(data);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Link to={`${location.pathname}/${course.id}`} className=\"card-link\">\r\n            <Card className=\"course-card bg-light mobile-card\">\r\n                <h5 className=\"card-header\"><strong>{course.name}</strong></h5>\r\n                <div className=\"col-12 py-3 card-body\">\r\n                    <p className=\"text-left no wrap ml-3\"><strong>Location:</strong> {course.location}</p>\r\n                    <div className=\"mb-3 description\" style={{ position: \"relative\" }}>\r\n                        <p className=\"text-left ml-3 line-clamp\"><strong>Decription:</strong> {course.description}</p>\r\n                    </div>\r\n                    <p className=\"text-left ml-3\"><strong>Times Played:</strong> {timesPlayed.length}</p>\r\n                </div>\r\n            </Card >\r\n        </Link>\r\n    );\r\n};","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n","import { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useContext } from 'react';\r\nimport { Form, Input } from 'reactstrap';\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\n\r\nconst CourseSearch = ({ onSearch }) => {\r\n    const { getToken } = useContext(UserContext);\r\n    const [searchTerms, setSearchTerms] = useState(\"\");\r\n    const { width } = useWindowDimensions();\r\n    const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        getToken().then((token) =>\r\n            fetch(`/api/course/${currentUserId}/search?q=${searchTerms}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // The token gets added to the Authorization header\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(searchResults => onSearch(searchResults)));\r\n        setSearchTerms(\"\");\r\n    }\r\n\r\n    return (\r\n        <Form className={width > 576 ? (width < 768 ? \"input-group ml-auto mr-3 my-4 w-50\" : \"input-group mt-4 ml-auto mr-3 w-25\") : \"input-group my-4 mx-3\"}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Input value={searchTerms}\r\n                className=\"border-right-0\"\r\n                placeholder=\"Search for course\"\r\n                onChange={e => setSearchTerms(e.target.value.trim().toLowerCase())}\r\n            />\r\n            <span className=\"input-group-append\">\r\n                <div className=\"input-group-text bg-transparent border-left-0\"><FontAwesomeIcon icon={faSearch} /></div>\r\n            </span>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CourseSearch;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport { CourseCard } from \"../components/CourseCard\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport CourseSearch from \"../components/CourseSearch\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const CourseManager = () => {\r\n    const [courses, setCourses] = useState([]);\r\n    const { getToken } = useContext(UserContext);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/course`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedCourses) => {\r\n                    setCourses(parsedCourses);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {location.pathname.includes(\"scorecards\") && (\r\n                        <Link to={\"/scorecards\"} className=\"mt-4 ml-5 d-none d-md-flex\">\r\n                            <FontAwesomeIcon size=\"lg\" className=\"ml-2 text-secondary cancel\" icon={faArrowLeft} />\r\n                        </Link>\r\n                    )}\r\n                    <CourseSearch onSearch={setCourses} />\r\n                </div>\r\n                <h2>{location.pathname.includes(\"scorecards\") ? \"Choose Course\" : \"Courses\"}</h2>\r\n                <div className=\"row justify-content-center\">\r\n                    {\r\n                        courses.map(course => (\r\n                            <div key={course.id} className=\"m-4\">\r\n                                <CourseCard course={course} />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"reactstrap\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\n\r\nexport const DiscCard = ({ disc }) => {\r\n    const { getToken } = useContext(UserContext);\r\n    const [discShots, setDiscShots] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/shot/disc/${disc.id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedShots) => {\r\n                    setDiscShots(parsedShots);\r\n                })\r\n        );\r\n    }, [])\r\n\r\n    return (\r\n        <Link to={`/discs/edit/${disc.id}`} className=\"card-link\">\r\n            <Card className=\"bg-light mobile-card\">\r\n                <h5 className=\"card-header\"><strong>{disc.name}</strong></h5>\r\n                <div className=\"col-12 py-3 card-body\">\r\n                    <p className=\"text-left ml-3\"><strong>Weight:</strong> {disc.weight}g</p>\r\n                    <p className=\"text-left ml-3\"><strong>Plastic:</strong> {disc.plastic}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Type:</strong> {disc.discType.label}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Throws recorded:</strong> {discShots.length}</p>\r\n                </div>\r\n            </Card >\r\n        </Link>\r\n    );\r\n};","import { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Form, Input } from \"reactstrap\"\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\"\r\n\r\nexport const DiscFilter = ({ searchTerms, setSearchTerms }) => {\r\n    const { width } = useWindowDimensions();\r\n\r\n    return (\r\n        <Form className={width > 576 ? (width < 768 ? \"input-group ml-auto mr-3 my-4 w-50\" : \"input-group mt-4 ml-auto mr-3 w-25\") : \"input-group my-4 mx-3\"}\r\n            onSubmit={e => e.preventDefault()}\r\n        >\r\n            <Input value={searchTerms}\r\n                className=\"border-right-0\"\r\n                placeholder=\"Filter discs\"\r\n                onChange={e => setSearchTerms(e.target.value)}\r\n            />\r\n            <span className=\"input-group-append\">\r\n                <div className=\"input-group-text bg-transparent border-left-0\"><FontAwesomeIcon icon={faSearch} /></div>\r\n            </span>\r\n        </Form>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport { DiscCard } from \"../components/DiscCard\";\r\nimport { Button } from \"reactstrap\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DiscFilter } from \"../components/DiscFilter\";\r\n\r\nexport const DiscManager = () => {\r\n    const [discs, setDiscs] = useState([]);\r\n    const [searchTerms, setSearchTerms] = useState(\"\");\r\n    const [filtered, setFiltered] = useState([]);\r\n    const { getToken } = useContext(UserContext);\r\n    const { width } = useWindowDimensions();\r\n    const history = useHistory();\r\n\r\n    const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/disc/${currentUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedDiscs) => {\r\n                    setDiscs(parsedDiscs);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (searchTerms !== \"\") {\r\n            // If the search field is not blank, display matching friends\r\n            const subset = discs.filter(disc => {\r\n                return disc.name.toLowerCase().includes(searchTerms.toLowerCase())\r\n            })\r\n            setFiltered(subset)\r\n        } else {\r\n            // If the search field is blank, display all user friends\r\n            setFiltered(discs)\r\n        }\r\n    }, [searchTerms, discs])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <DiscFilter searchTerms={searchTerms} setSearchTerms={setSearchTerms} />\r\n                </div>\r\n                <h2>Discs</h2>\r\n                <Button type=\"button\"\r\n                    block={width < 992}\r\n                    onClick={() => history.push(\"/discs/add\")}\r\n                    color=\"danger\">Add Disc</Button>\r\n                <div className=\"row justify-content-center\">\r\n                    {\r\n                        filtered.map(disc => {\r\n                            return (\r\n                                <div key={disc.id} className=\"m-4\">\r\n                                    <DiscCard disc={disc} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport { ScorecardCard } from \"../components/ScorecardCard\";\r\nimport { Button } from \"reactstrap\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const ScorecardManager = () => {\r\n    const [scorecards, setScorecards] = useState([]);\r\n    const { getToken } = useContext(UserContext);\r\n    const { width } = useWindowDimensions();\r\n    const history = useHistory();\r\n\r\n    const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/scorecard/user/${currentUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedScorecards) => {\r\n                    setScorecards(parsedScorecards);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Scorecards</h2>\r\n            <Button type=\"button\"\r\n                block={width < 992}\r\n                onClick={() => history.push(\"/scorecards/courses\")}\r\n                color=\"danger\">New Scorecard</Button>\r\n            <div className=\"row justify-content-center\">\r\n                {\r\n                    scorecards.map(scorecard => {\r\n                        return (\r\n                            <div key={scorecard.id} className=\"m-4\">\r\n                                <ScorecardCard scorecard={scorecard} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, ModalBody, ModalFooter, Modal, ModalHeader } from \"reactstrap\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const DiscForm = () => {\r\n    const { getToken } = useContext(UserContext);\r\n    const [discTypes, setDiscTypes] = useState([]);\r\n    const [disc, setDisc] = useState({});\r\n    const [pendingDelete, setPendingDelete] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { width } = useWindowDimensions();\r\n\r\n    const { discId } = useParams();\r\n    const history = useHistory();\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    //get Disc\r\n    const getDiscById = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/disc/edit/${discId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    if (res.status === 404) {\r\n                        toast.error(\"That's not your disc\");\r\n                        history.push(\"/discs\");\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    setDisc(data);\r\n                })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (discId) {\r\n            getDiscById();\r\n            setIsLoading(false);\r\n        } else {\r\n            setIsLoading(false);\r\n            setDisc({\r\n                name: \"\",\r\n                weight: 0,\r\n                plastic: \"\",\r\n                discTypeId: 0\r\n            });\r\n        }\r\n    }, [discId]);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(\"/api/discType\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setDiscTypes(data);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    const addDisc = (disc) => {\r\n        getToken().then((token) => {\r\n            return fetch(\"/api/disc\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(disc),\r\n            }).then(() => history.push(\"/discs\"));\r\n        });\r\n    };\r\n\r\n    const updateDisc = (disc) => {\r\n        getToken().then((token) => {\r\n            return fetch(`/api/disc/${disc.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(disc),\r\n            }).then(() => history.push(\"/discs\"));\r\n        });\r\n    };\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newDisc = { ...disc };\r\n        newDisc[event.target.name] = event.target.value;\r\n        setDisc(newDisc);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (parseInt(disc.discTypeId) === 0) {\r\n            toast.error(\"Enter a disc type\", { position: \"top:center\" });\r\n        } else {\r\n            setIsLoading(true);\r\n            if (discId) {\r\n                updateDisc({\r\n                    id: disc.id,\r\n                    name: disc.name,\r\n                    weight: disc.weight,\r\n                    plastic: disc.plastic,\r\n                    IsActive: true,\r\n                    userId: parseInt(userId),\r\n                    discTypeId: disc.discTypeId\r\n                });\r\n            } else {\r\n                addDisc({\r\n                    name: disc.name,\r\n                    weight: disc.weight,\r\n                    plastic: disc.plastic,\r\n                    IsActive: true,\r\n                    userId: parseInt(userId),\r\n                    discTypeId: disc.discTypeId\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/disc/${disc.id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => history.push(\"/discs\"))\r\n        );\r\n        setPendingDelete(false);\r\n    };\r\n\r\n    if (disc?.id) {\r\n        if (disc?.userId !== parseInt(userId)) {\r\n            return (\r\n                <>\r\n                    <h1>This is not your disc to edit</h1>\r\n                    <Button>\r\n                        <Link to={\"/discs\"}>Go Back</Link>\r\n                    </Button>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={width < 768 ? \"container my-5\" : \"container border border-dark my-5 bg-light\"} style={{ minWidth: \"20em\", maxWidth: \"25em\" }}>\r\n            <Link to={\"/discs\"} className=\"row d-none d-md-flex\" disabled={isLoading}>\r\n                <FontAwesomeIcon size=\"lg\" className=\"ml-auto mt-1 mr-2 text-secondary cancel\" icon={faTimes} />\r\n            </Link>\r\n            <Form className=\"p-5 mt-n5\" onSubmit={handleSubmit}>\r\n                {discId ? <h2>Edit Disc</h2> : <h2>Add Disc</h2>}\r\n                <FormGroup row>\r\n                    <Label for=\"name\">\r\n                        Name\r\n                    </Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"discName\"\r\n                        name=\"name\"\r\n                        autoFocus\r\n                        placeholder=\"Name\"\r\n                        className=\"form-control\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        defaultValue={disc?.name}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label>\r\n                        Type\r\n                    </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"discTypeId\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        value={disc?.discTypeId}\r\n                    >\r\n                        <option value=\"0\" hidden>Select a type</option>\r\n                        {\r\n                            discTypes.map((dt) => (\r\n                                <option value={dt.id} key={dt.id}>\r\n                                    {dt.label}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"content\">\r\n                        Plastic\r\n                    </Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"plastic\"\r\n                        placeholder=\"Plastic\"\r\n                        onChange={handleControlledInputChange}\r\n                        defaultValue={disc?.plastic}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"content\">\r\n                        Weight\r\n                    </Label>\r\n                    <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        onChange={handleControlledInputChange}\r\n                        defaultValue={disc?.weight}\r\n                    />\r\n                </FormGroup>\r\n                <Button block={width < 992} type=\"submit\" className=\"mt-4 mr-3\" color=\"danger\" disabled={isLoading}>\r\n                    {discId ? \"Save\" : \"Submit\"}\r\n                </Button>\r\n                {discId && (\r\n                    <Button block={width < 992}\r\n                        onClick={(e) => setPendingDelete(true)}\r\n                        className=\"mt-4\"\r\n                        color=\"dark\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                )}\r\n            </Form>\r\n            <Modal isOpen={pendingDelete}>\r\n                <ModalHeader>Delete {disc.name}?</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure you want to delete this disc? This action cannot be\r\n                    undone.\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button outline onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n                    <Button color=\"dark\" onClick={handleDelete}>\r\n                        Yes, Delete\r\n                </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};","import { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport groupBy from \"../utils/groupBy\";\r\nimport { ScoreBar } from \"../components/ScoreBar\";\r\n\r\nexport const CourseDetails = () => {\r\n    const [course, setCourse] = useState({});\r\n    const [holes, setHoles] = useState([]);\r\n    const [scorecards, setScorecards] = useState([]);\r\n    const [shots, setShots] = useState([]);\r\n    const [allConditions, setAllConditions] = useState([]);\r\n    const [conditionsId, setConditionsId] = useState(0);\r\n    const [par, setPar] = useState();\r\n    const [scores, setScores] = useState([]);\r\n    const [distance, setDistance] = useState();\r\n    const [average, setAverage] = useState();\r\n    const [best, setBest] = useState();\r\n    const [scoreBreakdown, setScoreBreakdown] = useState();\r\n    const { getToken } = useContext(UserContext);\r\n    const { width } = useWindowDimensions();\r\n    const location = useLocation();\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/course/${params.courseId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedCourse) => {\r\n                    setCourse(parsedCourse);\r\n                })\r\n                .then(() => {\r\n                    return fetch(`/api/conditions`, {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    })\r\n                        .then((res) => res.json())\r\n                        .then((parsedConditions) => {\r\n                            setAllConditions(parsedConditions);\r\n                        })\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (course.id) {\r\n            getToken().then((token) =>\r\n                fetch(`/api/shot/course/${course.id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((parsedShots) => {\r\n                        setShots(parsedShots);\r\n                    })\r\n                    .then(() => {\r\n                        return fetch(`/api/scorecard/course/${params.courseId}`, {\r\n                            method: \"GET\",\r\n                            headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                            },\r\n                        })\r\n                            .then((res) => res.json())\r\n                            .then((parsedScorecards) => {\r\n                                setScorecards(parsedScorecards);\r\n                            })\r\n                    })\r\n                    .then(() => {\r\n                        return fetch(`/api/hole/course/${params.courseId}`, {\r\n                            method: \"GET\",\r\n                            headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                            },\r\n                        })\r\n                            .then((res) => res.json())\r\n                            .then((parsedHoles) => {\r\n                                setHoles(parsedHoles);\r\n                            })\r\n                    })\r\n            )\r\n        }\r\n    }, [course]);\r\n\r\n    useEffect(() => {\r\n        if (holes.length) {\r\n            const holePars = [];\r\n            const holeLengths = [];\r\n            holes.forEach(hole => {\r\n                holePars.push(hole.par)\r\n                holeLengths.push(hole.distance)\r\n            });\r\n            setPar(holePars.reduce((acc, cur) => acc + cur));\r\n            setDistance(holeLengths.reduce((acc, cur) => acc + cur));\r\n        }\r\n    }, [holes]);\r\n\r\n    useEffect(() => {\r\n        if (shots.length && holes.length && !scores.length) {\r\n            const shotsPerScorecard = groupBy(shots, \"scorecardId\")\r\n            const roundScores = shotsPerScorecard.map(scorecardShots => {\r\n                if (scorecardShots) {\r\n                    return findScore(scorecardShots)\r\n                }\r\n                return null\r\n            })\r\n            const filteredScores = roundScores.filter(rs => rs !== null)\r\n            setScores(filteredScores);\r\n        }\r\n    }, [shots, holes]);\r\n\r\n    useEffect(() => {\r\n        if (scores.length && scores.length === scorecards.length) {\r\n            const totalAverage = Math.round(scores.reduce((acc, cur) => acc + cur) / scores.length);\r\n            const bestScore = Math.min(...scores)\r\n            setAverage(totalAverage < 0 ? totalAverage : totalAverage === 0 ? \"E\" : `+${totalAverage}`)\r\n            setBest(bestScore < 0 ? bestScore : bestScore === 0 ? \"E\" : `+${bestScore}`);\r\n        }\r\n    }, [scores]);\r\n\r\n    useEffect(() => {\r\n        if (shots.length && best) {\r\n            const groupByHoles = groupBy(shots, \"holeId\");\r\n            const groupByRound = groupByHoles.map(hole => groupBy(hole, \"scorecardId\"));\r\n            const breakdown = {\r\n                minus: 0,\r\n                birdie: 0,\r\n                par: 0,\r\n                bogey: 0,\r\n                double: 0,\r\n                plus: 0\r\n            };\r\n            groupByRound.forEach(holeNum => {\r\n                holeNum.forEach(roundShots => {\r\n                    if (roundShots) {\r\n                        let par = roundShots[0].hole.par;\r\n                        let penaltyStrokes = roundShots.filter(shot => shot.qualityOfShotId === 4).length;\r\n                        switch (roundShots.length + penaltyStrokes - par) {\r\n                            case -4:\r\n                                breakdown.minus = breakdown.minus + 1;\r\n                                break;\r\n                            case -3:\r\n                                breakdown.minus = breakdown.minus + 1;\r\n                                break;\r\n                            case -2:\r\n                                breakdown.minus = breakdown.minus + 1;\r\n                                break;\r\n                            case -1:\r\n                                breakdown.birdie = breakdown.birdie + 1;\r\n                                break;\r\n                            case 0:\r\n                                breakdown.par = breakdown.par + 1;\r\n                                break;\r\n                            case 1:\r\n                                breakdown.bogey = breakdown.bogey + 1;\r\n                                break;\r\n                            case 2:\r\n                                breakdown.double = breakdown.double + 1;\r\n                                break;\r\n                            default:\r\n                                breakdown.plus = breakdown.plus + 1;\r\n                                break;\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            setScoreBreakdown(breakdown);\r\n        }\r\n\r\n    }, [shots, best])\r\n\r\n    const findScore = (scorecardShots) => {\r\n        let totalScore = 0;\r\n        holes.forEach(hole => {\r\n            let shotsForHole = scorecardShots.filter(ss => ss.holeId === hole.id)\r\n            if (shotsForHole.length) {\r\n                let penaltyStrokes = 0;\r\n                shotsForHole.forEach(shot => {\r\n                    if (shot.qualityOfShotId === 4) {\r\n                        penaltyStrokes = penaltyStrokes + 1\r\n                    }\r\n                })\r\n                let holeScore = shotsForHole.length + penaltyStrokes - hole.par;\r\n                totalScore = totalScore + holeScore;\r\n            }\r\n        });\r\n        return totalScore;\r\n    }\r\n\r\n    const addScorecard = (scorecard) => {\r\n        getToken().then((token) =>\r\n            fetch(\"/api/scorecard\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(scorecard),\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => history.push(`/scorecards/${data.id}/${holes.find(hole => hole.number === 1).id}`))\r\n        );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (parseInt(conditionsId) === 0) {\r\n            toast.error(\"Enter conditions\", { position: \"top:center\" });\r\n        } else {\r\n            addScorecard({\r\n                courseId: params.courseId,\r\n                conditionsId: conditionsId,\r\n                userId: parseInt(currentUserId)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mt-4 mt-md-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Link to={location.pathname.includes(\"scorecards\") ? \"/scorecards/courses\" : \"/courses\"}\r\n                            className=\"mt-4  d-none d-md-flex\"\r\n                        >\r\n                            <FontAwesomeIcon size=\"lg\" className=\"ml-2 text-secondary cancel\" icon={faArrowLeft} />\r\n                        </Link>\r\n                    </div>\r\n                    <h3>{course.name}</h3>\r\n                    <div>\r\n                        <p className=\"text-left\"><strong>Location:</strong> {course.location}</p>\r\n                        <p className=\"text-left\"><strong>Description:</strong> {course.description}</p>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"row mr-1 justify-content-between\">\r\n                        <p className=\"text-left ml-3\"><strong>Par:</strong> {par}</p>\r\n                        <p className=\"text-left ml-3\"><strong>Distance:</strong> {distance}ft</p>\r\n                        <p className=\"text-left ml-3\"><strong># of holes:</strong> {holes.length}</p>\r\n                        <p className=\"text-left ml-3\"><strong>Times played:</strong> {scorecards.length}</p>\r\n                        <p className=\"text-left ml-3\"><strong>Avg score:</strong> {scorecards.length ? average : \"N/A\"}</p>\r\n                        <p className=\"text-left ml-3\"><strong>Best score:</strong> {scorecards.length ? best : \"N/A\"}</p>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n                {scoreBreakdown && (\r\n                    <div className=\"mx-0 my-3\" style={{ position: \"relative\", width: \"95vw\", height: \"18em\" }}>\r\n                        <ScoreBar scoreBreakdown={scoreBreakdown} />\r\n                    </div>\r\n                )}\r\n                {location.pathname.includes(\"scorecards\") && (\r\n                    <div className=\"container\">\r\n                        <Form className={width > 576 ? (width < 992 ? \"my-4 mx-auto w-75\" : \"mt-4 mx-auto w-25\") : \"my-4 mx-3\"}\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <FormGroup row>\r\n                                <Label>\r\n                                    Current Conditions\r\n                                </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"conditionsId\"\r\n                                    onChange={(e) => setConditionsId(e.target.value)}\r\n                                    required=\"required\"\r\n                                    value={conditionsId}\r\n                                >\r\n                                    <option value=\"0\" hidden>Select conditions</option>\r\n                                    {\r\n                                        allConditions.map((c) => (\r\n                                            <option value={c.id} key={c.id}>\r\n                                                {c.label}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <Button color=\"danger\" type=\"submit\" block={width < 768}>Start Round</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}","import { Button } from \"reactstrap\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport groupBy from \"../utils/groupBy\";\r\nimport { ScoreBar } from \"../components/ScoreBar\";\r\n\r\nexport const HoleDetails = () => {\r\n    const [hole, setHole] = useState();\r\n    const [shots, setShots] = useState([]);\r\n    const [disc, setDisc] = useState();\r\n    const [lastDrive, setLastDrive] = useState();\r\n    const [shotType, setShotType] = useState();\r\n    const [scoreBreakdown, setScoreBreakdown] = useState();\r\n    const { getToken } = useContext(UserContext);\r\n    const { width } = useWindowDimensions();\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/hole/${params.holeId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedHole) => {\r\n                    setHole(parsedHole);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (hole) {\r\n            getToken().then((token) =>\r\n                fetch(`/api/shot/hole/${params.holeId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((parsedShots) => {\r\n                        setShots(parsedShots);\r\n                    })\r\n            );\r\n        }\r\n    }, [hole]);\r\n\r\n    useEffect(() => {\r\n        if (shots.length) {\r\n            const drives = shots.filter(shot => shot.shotRangeId === 1);\r\n            const discs = drives.map(drive => drive.disc);\r\n            const shotTypes = drives.map(drive => drive.shotType)\r\n            const mostUsedDisc = highestOccurence(discs);\r\n            const mostUsedShotType = highestOccurence(shotTypes);\r\n            const groupByRound = groupBy(shots, \"scorecardId\");\r\n            const breakdown = {\r\n                minus: 0,\r\n                birdie: 0,\r\n                par: 0,\r\n                bogey: 0,\r\n                double: 0,\r\n                plus: 0\r\n            };\r\n            groupByRound.forEach(roundShots => {\r\n                if (roundShots) {\r\n                    let par = roundShots[0].hole.par;\r\n                    let penaltyStrokes = roundShots.filter(shot => shot.qualityOfShotId === 4).length;\r\n                    switch (roundShots.length + penaltyStrokes - par) {\r\n                        case -4:\r\n                            breakdown.minus = breakdown.minus + 1;\r\n                            break;\r\n                        case -3:\r\n                            breakdown.minus = breakdown.minus + 1;\r\n                            break;\r\n                        case -2:\r\n                            breakdown.minus = breakdown.minus + 1;\r\n                            break;\r\n                        case -1:\r\n                            breakdown.birdie = breakdown.birdie + 1;\r\n                            break;\r\n                        case 0:\r\n                            breakdown.par = breakdown.par + 1;\r\n                            break;\r\n                        case 1:\r\n                            breakdown.bogey = breakdown.bogey + 1;\r\n                            break;\r\n                        case 2:\r\n                            breakdown.double = breakdown.double + 1;\r\n                            break;\r\n                        default:\r\n                            breakdown.plus = breakdown.plus + 1;\r\n                            break;\r\n                    }\r\n                }\r\n            })\r\n            setScoreBreakdown(breakdown);\r\n            setDisc(mostUsedDisc)\r\n            setShotType(mostUsedShotType);\r\n            setLastDrive(drives[0]);\r\n        }\r\n    }, [shots]);\r\n\r\n    const highestOccurence = (arr) => {\r\n        return arr.sort((a, b) =>\r\n            arr.filter(x => x === a).length\r\n            - arr.filter(x => x === b).length\r\n        ).pop();\r\n    }\r\n\r\n    const handleStart = () => {\r\n        localStorage.setItem('hole', hole.number);\r\n        history.push(`/scorecards/${params.scorecardId}/${params.holeId}/shot/1`)\r\n    }\r\n\r\n    if (!hole?.id) {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <h1>Not Found</h1>\r\n                <Button block={width < 768} color=\"secondary\" className=\"mt-5\">\r\n                    <Link style={{ color: \"white\" }} to={\"/scorecards\"}>Go Back</Link>\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <div className=\"container\">\r\n                {hole &&\r\n                    <>\r\n                        <h3>Hole {hole.number}</h3>\r\n                        <div>\r\n                            <p className=\"text-left\"><strong>Par:</strong> {hole.par}</p>\r\n                            <p className=\"text-left\"><strong>Distance:</strong> {hole.distance}</p>\r\n                        </div>\r\n                    </>\r\n                }\r\n                {disc && shotType && lastDrive &&\r\n                    <>\r\n                        <div>\r\n                            <p className=\"text-left\"><strong>Most thrown disc:</strong> {disc.name}</p>\r\n                            <p className=\"text-left\"><strong>Most thrown shot:</strong> {shotType.label}</p>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                            <p className=\"text-left mx-3\"><strong>Last throw:</strong> {lastDrive.disc.name} {lastDrive.shotType.label} {lastDrive.shotSelection.label}</p>\r\n                            <p className=\"text-left mx-3\"><strong>Result:</strong> {lastDrive.qualityOfShot.label}</p>\r\n                        </div>\r\n                        <hr />\r\n                    </>\r\n                }\r\n            </div>\r\n            {scoreBreakdown && (\r\n                <div className=\"mx-0\" style={{ position: \"relative\", width: \"95vw\", height: \"18em\" }}>\r\n                    <ScoreBar scoreBreakdown={scoreBreakdown} />\r\n                </div>\r\n            )}\r\n            <div className=\"container mb-4\">\r\n                <Button color=\"danger\" className=\"mt-3\" block={width < 992} onClick={handleStart}>Start Hole</Button><br />\r\n                <Button color=\"primary\" className=\"mt-3\" block={width < 992} onClick={() => history.push(`/scorecards/${params.scorecardId}/overview`)}>Finish Round</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { Button } from \"reactstrap\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Input, Label, FormGroup, Modal, ModalBody, ModalHeader, ModalFooter, Form } from \"reactstrap\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const ShotForm = () => {\r\n    const [shotRanges, setShotRanges] = useState([]);\r\n    const [shotTypes, setShotTypes] = useState([]);\r\n    const [shot, setShot] = useState({});\r\n    const [shotSelections, setShotSelections] = useState([]);\r\n    const [qualities, setQualities] = useState([]);\r\n    const [discs, setDiscs] = useState([]);\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const { getToken } = useContext(UserContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [pendingDelete, setPendingDelete] = useState(false);\r\n    const params = useParams();\r\n\r\n    const { width } = useWindowDimensions();\r\n    const history = useHistory();\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    const getShotById = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/shot/${params.shotId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    if (res.status === 404) {\r\n                        toast.error(\"That's not your shot\");\r\n                        history.push(\"/scorecards\");\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    setShot(data);\r\n                })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (params.shotId) {\r\n            getShotById();\r\n            setIsLoading(false);\r\n        } else {\r\n            setShot({\r\n                qualityOfShotId: 0,\r\n                discId: 0,\r\n                shotRangeId: 0,\r\n                shotTypeId: 0,\r\n                shotSelectionId: 0,\r\n                isObstructed: false\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n    }, [params.shotId]);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/shotRange`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setShotRanges(data);\r\n                })\r\n                .then(() =>\r\n                    fetch(`/api/shotType`, {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    })\r\n                        .then((res) => res.json())\r\n                        .then((data) => {\r\n                            setShotTypes(data);\r\n                        }))\r\n                .then(() =>\r\n                    fetch(`/api/shotSelection`, {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    })\r\n                        .then((res) => res.json())\r\n                        .then((data) => {\r\n                            setShotSelections(data);\r\n                        }))\r\n                .then(() =>\r\n                    fetch(`/api/qualityOfShot`, {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    })\r\n                        .then((res) => res.json())\r\n                        .then((data) => {\r\n                            setQualities(data);\r\n                        }))\r\n                .then(() =>\r\n                    fetch(`/api/disc/${userId}`, {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    })\r\n                        .then((res) => res.json())\r\n                        .then((data) => {\r\n                            setDiscs(data);\r\n                        }))\r\n        );\r\n    }, []);\r\n\r\n    const addShot = (shot, holeComplete) => {\r\n        getToken().then((token) => {\r\n            return fetch(\"/api/shot\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(shot),\r\n            })\r\n                .then(() => {\r\n                    if (holeComplete) {\r\n                        history.push(`/scorecards/${params.scorecardId}/${params.holeId}/overview`)\r\n                    } else {\r\n                        const shotNumber = shot.qualityOfShotId === \"4\" ? parseInt(params.shotNum) + 2 : parseInt(params.shotNum) + 1;\r\n                        history.push(`/scorecards/${params.scorecardId}/${params.holeId}/shot/${shotNumber}`)\r\n                        setShot({\r\n                            qualityOfShotId: 0,\r\n                            discId: 0,\r\n                            shotRangeId: 0,\r\n                            shotTypeId: 0,\r\n                            shotSelectionId: 0,\r\n                            isObstructed: false\r\n                        });\r\n                        setIsLoading(false);\r\n                    }\r\n                })\r\n        });\r\n    };\r\n\r\n    const updateShot = (shot) => {\r\n        getToken().then((token) => {\r\n            return fetch(`/api/shot/${shot.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(shot),\r\n            })\r\n                .then(() => history.push(`/scorecards/${params.scorecardId}/${params.holeId}/overview`))\r\n        });\r\n    };\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newShot = { ...shot };\r\n        newShot[event.target.name] = event.target.value;\r\n        setShot(newShot);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (parseInt(shot.shotTypeId) === 0 || parseInt(shot.shotRangeId) === 0 || parseInt(shot.shotSelectionId) === 0 || parseInt(shot.QualityOfShotId) === 0 || parseInt(shot.DiscId) === 0) {\r\n            toast.error(\"Enter a choice for all fields\", { position: \"top:center\" });\r\n        } else {\r\n            setIsLoading(true);\r\n            if (params.shotId) {\r\n                updateShot({\r\n                    id: shot.id,\r\n                    scorecardId: params.scorecardId,\r\n                    userId: parseInt(userId),\r\n                    holeId: params.holeId,\r\n                    qualityOfShotId: shot.qualityOfShotId,\r\n                    discId: shot.discId,\r\n                    shotRangeId: shot.shotRangeId,\r\n                    shotTypeId: shot.shotTypeId,\r\n                    shotSelectionId: shot.shotSelectionId,\r\n                    isObstructed: !isChecked\r\n                })\r\n            } else {\r\n                addShot({\r\n                    scorecardId: params.scorecardId,\r\n                    userId: parseInt(userId),\r\n                    holeId: params.holeId,\r\n                    qualityOfShotId: shot.qualityOfShotId,\r\n                    discId: shot.discId,\r\n                    shotRangeId: shot.shotRangeId,\r\n                    shotTypeId: shot.shotTypeId,\r\n                    shotSelectionId: shot.shotSelectionId,\r\n                    isObstructed: !isChecked\r\n                }, false)\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCompleteHole = (e) => {\r\n        e.preventDefault();\r\n        if (parseInt(shot.shotTypeId) === 0 || parseInt(shot.shotRangeId) === 0 || parseInt(shot.shotSelectionId) === 0 || parseInt(shot.QualityOfShotId) === 0 || parseInt(shot.DiscId) === 0) {\r\n            toast.error(\"Enter a choice for all fields\", { position: \"top:center\" });\r\n        } else {\r\n            setIsLoading(true);\r\n            addShot({\r\n                scorecardId: params.scorecardId,\r\n                userId: parseInt(userId),\r\n                holeId: params.holeId,\r\n                qualityOfShotId: shot.qualityOfShotId,\r\n                discId: shot.discId,\r\n                shotRangeId: shot.shotRangeId,\r\n                shotTypeId: shot.shotTypeId,\r\n                shotSelectionId: shot.shotSelectionId,\r\n                isObstructed: !isChecked\r\n            }, true)\r\n        }\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/shot/${shot.id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => history.push(`/scorecards/${params.scorecardId}/${params.holeId}/overview`))\r\n        );\r\n        setPendingDelete(false);\r\n    };\r\n\r\n    if (shot?.id) {\r\n        if (shot?.userId !== parseInt(userId)) {\r\n            return (\r\n                <>\r\n                    <h1>This is not your shot to edit</h1>\r\n                    <Button>\r\n                        <Link to={\"/scorecards\"}>Go Back</Link>\r\n                    </Button>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={width < 768 ? \"container my-5\" : \"container border border-dark my-5 bg-light\"} style={{ minWidth: \"20em\", maxWidth: \"25em\" }}>\r\n            <Link to={params.shotId ? `/scorecards/${params.scorecardId}/${params.holeId}/overview` : `/scorecards/${params.scorecardId}/${params.holeId}`} className=\"row d-none d-md-flex\" disabled={isLoading}>\r\n                <FontAwesomeIcon size=\"lg\" className=\"ml-auto mt-1 mr-2 text-secondary cancel\" icon={faTimes} />\r\n            </Link>\r\n            <Form className=\"p-5 mt-n5\" onSubmit={handleSubmit}>\r\n                <h2 className={!params.shotId && \"mt-3\"}>Hole {JSON.parse(localStorage.getItem(\"hole\"))}</h2>\r\n                {params.shotId ? <h4>Edit Shot</h4> : <h4>Shot {params.shotNum}</h4>}\r\n                <FormGroup row>\r\n                    <Label>\r\n                        Range\r\n                    </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"shotRangeId\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        value={shot?.shotRangeId}\r\n                    >\r\n                        <option value=\"0\" hidden>Shot range</option>\r\n                        {\r\n                            shotRanges.map((sr) => (\r\n                                <option value={sr.id} key={sr.id}>\r\n                                    {sr.label}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label>\r\n                        Type\r\n                    </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"shotTypeId\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        value={shot?.shotTypeId}\r\n                    >\r\n                        <option value=\"0\" hidden>Shot type</option>\r\n                        {\r\n                            shotTypes.map((st) => (\r\n                                <option value={st.id} key={st.id}>\r\n                                    {st.label}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label>\r\n                        Selection\r\n                    </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"shotSelectionId\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        value={shot?.shotSelectionId}\r\n                    >\r\n                        <option value=\"0\" hidden>Shot selection</option>\r\n                        {\r\n                            shotSelections.map((ss) => (\r\n                                <option value={ss.id} key={ss.id}>\r\n                                    {ss.label}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label>\r\n                        Disc\r\n                    </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"discId\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        value={shot?.discId}\r\n                    >\r\n                        <option value=\"0\" hidden>Select a disc</option>\r\n                        {\r\n                            discs.map((d) => (\r\n                                <option value={d.id} key={d.id}>\r\n                                    {d.name}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label>\r\n                        Quality of Shot\r\n                    </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"qualityOfShotId\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        value={shot?.qualityOfShotId}\r\n                    >\r\n                        <option value=\"0\" hidden>Quality of shot</option>\r\n                        {\r\n                            qualities.map((q) => (\r\n                                <option value={q.id} key={q.id}>\r\n                                    {q.label}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup check className=\"text-left my-4\">\r\n                    <Label check htmlFor=\"isObstructed\">\r\n                        <Input type=\"checkbox\" name=\"isObstructed\" checked={isChecked} onChange={() => setIsChecked(!isChecked)} />{' '}\r\n                    Obstructed?\r\n                    </Label>\r\n                </FormGroup>\r\n                <Button block\r\n                    type=\"submit\"\r\n                    className=\"mt-3\"\r\n                    color={params.shotId ? \"danger\" : \"primary\"}\r\n                    disabled={isLoading}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    {params.shotId ? \"Save\" : \"Next Shot\"}\r\n                </Button><br />\r\n                {!params.shotId &&\r\n                    <>\r\n                        <Button block\r\n                            type=\"submit\"\r\n                            className=\"mt-3\"\r\n                            color=\"danger\"\r\n                            disabled={isLoading}\r\n                            onClick={handleCompleteHole}\r\n                        >\r\n                            Complete Hole\r\n                    </Button><br />\r\n                    </>\r\n                }\r\n                {params.shotNum !== 1 &&\r\n                    <Button block\r\n                        onClick={(e) => setPendingDelete(true)}\r\n                        className=\"mt-3\"\r\n                        color=\"dark\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                }\r\n            </Form>\r\n            <Modal isOpen={pendingDelete}>\r\n                <ModalHeader>Delete Shot?</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure you want to delete this shot? This action cannot be\r\n                    undone.\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button outline onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n                    <Button color=\"dark\" onClick={handleDelete}>\r\n                        Yes, Delete\r\n                </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\"\r\nimport { Card } from \"reactstrap\"\r\n\r\nexport const ShotCard = ({ shot, shotNumber, params, hole }) => {\r\n\r\n    return (\r\n        <Link to={`/scorecards/${params.scorecardId}/${params.holeId}/${shot.id}`} className=\"card-link\" onClick={() => localStorage.setItem(\"hole\", hole.number)}>\r\n            < Card className=\"bg-light shot-card\">\r\n                <h5 className=\"card-header\"><strong>Shot {shotNumber}</strong></h5>\r\n                <div className=\"row col-12 py-3 card-body\">\r\n                    <p className=\"text-left ml-3\"><strong>Range:</strong> {shot.shotRange.label}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Type:</strong> {shot.shotType.label}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Selection:</strong> {shot.shotSelection.label}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Disc:</strong> {shot.disc.name}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Obstructed:</strong> {shot.isObstructed ? \"Yes\" : \"No\"}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Quality:</strong> {shot.qualityOfShot.label}</p>\r\n                </div>\r\n            </Card >\r\n        </Link >\r\n    )\r\n}","import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport { ShotCard } from \"../components/ShotCard\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\n\r\nexport const HoleOverview = () => {\r\n    const [hole, setHole] = useState([]);\r\n    const [shots, setShots] = useState([]);\r\n    const { getToken } = useContext(UserContext);\r\n    const { width } = useWindowDimensions();\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/hole/${params.holeId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedHole) => {\r\n                    setHole(parsedHole);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (hole) {\r\n            getToken().then((token) =>\r\n                fetch(`/api/shot/hole/${params.holeId}/${params.scorecardId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((parsedShots) => {\r\n                        setShots(parsedShots);\r\n                    })\r\n            );\r\n        }\r\n    }, [hole]);\r\n\r\n    const handleAdd = () => {\r\n        localStorage.setItem(\"hole\", hole.number)\r\n        history.push(`/scorecards/${params.scorecardId}/${parseInt(params.holeId)}/shot/${getTotalShots()}`)\r\n    }\r\n\r\n    const getTotalShots = () => {\r\n        const thrownShots = shots.length;\r\n        const penaltyStrokes = shots.filter(shot => shot.qualityOfShotId === 4).length\r\n        return thrownShots + penaltyStrokes + 1;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-4 mb-5\">\r\n            <h3 className=\"mt-3\">Hole {hole.number} Overview</h3>\r\n            <div>\r\n                <p className=\"text-left\"><strong>Total strokes:</strong> {shots.length + shots.filter(shot => shot.qualityOfShotId === 4).length}</p>\r\n                <p className=\"text-left\"><strong>Penalty strokes:</strong> {shots.filter(shot => shot.qualityOfShotId === 4).length}</p>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                {\r\n                    shots.map((shot, i) => (\r\n                        <div key={shot.id} className=\"m-4 w-100\">\r\n                            <ShotCard shot={shot} shotNumber={i + 1} hole={hole} params={params} />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <Button color=\"secondary\" className=\"my-4\" block={width < 768} onClick={handleAdd}>Add Shot</Button>\r\n            <hr />\r\n            {hole.number !== 18 && <><Button color=\"danger\" className=\"mt-3\" block={width < 768} onClick={() => history.push(`/scorecards/${params.scorecardId}/${parseInt(params.holeId) + 1}`)}>Next Hole</Button><br /></>}\r\n            <Button color=\"primary\" block={width < 768} className=\"mt-3\" onClick={() => history.push(`/scorecards/${params.scorecardId}/overview`)}>Finish Round</Button>\r\n        </div>\r\n    )\r\n}","import { Link } from \"react-router-dom\"\r\nimport { Card } from \"reactstrap\"\r\n\r\nexport const HoleCard = ({ hole, params, strokes }) => {\r\n    const score = strokes - hole.par;\r\n\r\n    return (\r\n        <Link to={strokes > 0 ? `/scorecards/${params.scorecardId}/${hole.id}/overview/edit` : `/scorecards/${params.scorecardId}/${hole.id}`} className=\"card-link\">\r\n            <Card className=\"bg-light hole-card mobile-card\">\r\n                <h5 className=\"card-header\"><strong>Hole {hole.number}</strong></h5>\r\n                <div className=\"col-12 py-3 card-body\">\r\n                    {strokes > 0 && <p className=\"text-left ml-3\"><strong>Score:</strong> {score < 0 ? score : score === 0 ? \"E\" : `+${score}`}</p>}\r\n                    <p className=\"text-left ml-3\"><strong>Par:</strong> {hole.par}</p>\r\n                    <p className=\"text-left ml-3\"><strong>Total strokes:</strong> {strokes > 0 ? strokes : \"N/A\"}</p>\r\n                </div>\r\n            </Card >\r\n        </Link >\r\n    )\r\n}","import { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport { HoleCard } from \"../components/HoleCard\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport groupBy from \"../utils/groupBy\";\r\n\r\nexport const RoundOverview = () => {\r\n    const [scorecard, setScorecard] = useState();\r\n    const [holes, setHoles] = useState([]);\r\n    const [shots, setShots] = useState([]);\r\n    const [roundScore, setRoundScore] = useState();\r\n    const [pendingDelete, setPendingDelete] = useState(false);\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const { width } = useWindowDimensions();\r\n    const { getToken } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/scorecard/${params.scorecardId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedScorecard) => {\r\n                    setScorecard(parsedScorecard);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (scorecard) {\r\n            getToken().then((token) =>\r\n                fetch(`/api/hole/course/${scorecard.courseId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((parsedHoles) => {\r\n                        setHoles(parsedHoles);\r\n                    }).then(() =>\r\n                        fetch(`/api/shot/scorecard/${scorecard.id}`, {\r\n                            method: \"GET\",\r\n                            headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                            },\r\n                        })\r\n                            .then((res) => res.json())\r\n                            .then((parsedShots) => {\r\n                                setShots(parsedShots);\r\n                            })\r\n                    )\r\n            );\r\n        }\r\n    }, [scorecard]);\r\n\r\n    useEffect(() => {\r\n        if (shots.length) {\r\n            const shotsPerHole = groupBy(shots, \"holeId\");\r\n            let totalScoreForRound = 0;\r\n            shotsPerHole.forEach(holeShots => {\r\n                if (holeShots.length) {\r\n                    const penaltyStrokes = holeShots.filter(shot => shot.qualityOfShotId === 4).length;\r\n                    const strokesForHole = holeShots.length + penaltyStrokes;\r\n                    totalScoreForRound = totalScoreForRound + strokesForHole - holeShots[0].hole.par;\r\n                }\r\n            })\r\n            setRoundScore(totalScoreForRound);\r\n        }\r\n\r\n    }, [shots])\r\n\r\n    const handleDelete = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/scorecard/${params.scorecardId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => history.push(\"/scorecards\"))\r\n        );\r\n        setPendingDelete(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4 mb-5\">\r\n            <h3>Round Overview</h3>\r\n            <div>\r\n                <p className=\"text-left\"><strong>Course:</strong> {scorecard?.course.name}</p>\r\n                <p className=\"text-left\"><strong>Total Score:</strong> {!roundScore ? \"N/A\" : roundScore < 0 ? roundScore : roundScore === 0 ? \"E\" : `+${roundScore}`}</p>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                {shots.length > 0 &&\r\n                    holes.map(hole => {\r\n                        let shotsForHole = shots.filter(shot => shot.holeId === hole.id);\r\n                        let penaltyStrokesForHole = shotsForHole.filter(shot => shot.qualityOfShotId === 4).length;\r\n                        let holeStrokes = shotsForHole.length + penaltyStrokesForHole;\r\n                        return (\r\n                            <div key={hole.id} className=\"m-4\">\r\n                                <HoleCard hole={hole} strokes={holeStrokes} params={params} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Button color=\"danger\" className=\"mt-3\" block={width < 992} onClick={() => history.push(`/scorecards`)}>Save Round</Button><br />\r\n            <Button color=\"dark\" className=\"mt-3\" block={width < 992} onClick={() => setPendingDelete(true)}>Delete Scorecard</Button>\r\n            <Modal isOpen={pendingDelete}>\r\n                <ModalHeader>Delete Scorecard?</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure you want to delete this scorecard? This action cannot be\r\n                    undone.\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button outline onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n                    <Button color=\"dark\" onClick={handleDelete}>\r\n                        Yes, Delete\r\n                </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport Login from \"../pages/Login\";\r\nimport Register from \"../pages/Register\";\r\nimport { Home } from \"../pages/Home\";\r\nimport { CourseManager } from \"../pages/CourseManager\";\r\nimport { DiscManager } from \"../pages/DiscManager\";\r\nimport { ScorecardManager } from \"../pages/ScorecardManager\";\r\nimport { DiscForm } from \"../pages/DiscForm\";\r\nimport { CourseDetails } from \"../pages/CourseDetails\";\r\nimport { HoleDetails } from \"../pages/HoleDetails\";\r\nimport { ShotForm } from \"../pages/ShotForm\";\r\nimport { HoleOverview } from \"../pages/HoleOverview\";\r\nimport { RoundOverview } from \"../pages/RoundOverview\";\r\n\r\nconst ApplicationViews = () => {\r\n    const { isLoggedIn } = useContext(UserContext);\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                {isLoggedIn ? <Home /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/courses\" exact>\r\n                {isLoggedIn ? <CourseManager /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/courses/:courseId(\\d+)\" exact>\r\n                {isLoggedIn ? <CourseDetails /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/discs\" exact>\r\n                {isLoggedIn ? <DiscManager /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/discs/add\" exact>\r\n                {isLoggedIn ? <DiscForm /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/discs/edit/:discId(\\d+)\" exact>\r\n                {isLoggedIn ? <DiscForm /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards\" exact>\r\n                {isLoggedIn ? <ScorecardManager /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/courses\" exact>\r\n                {isLoggedIn ? <CourseManager /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/courses/:courseId(\\d+)\" exact>\r\n                {isLoggedIn ? <CourseDetails /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/:scorecardId(\\d+)/:holeId(\\d+)\" exact>\r\n                {isLoggedIn ? <HoleDetails /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/:scorecardId(\\d+)/:holeId(\\d+)/shot/:shotNum(\\d+)\" exact>\r\n                {isLoggedIn ? <ShotForm /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/:scorecardId(\\d+)/:holeId(\\d+)/:shotId(\\d+)\" exact>\r\n                {isLoggedIn ? <ShotForm /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/:scorecardId(\\d+)/:holeId(\\d+)/overview\" exact>\r\n                {isLoggedIn ? <HoleOverview /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/:scorecardId(\\d+)/:holeId(\\d+)/overview/edit\" exact>\r\n                {isLoggedIn ? <HoleOverview /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/:scorecardId(\\d+)/overview\" exact>\r\n                {isLoggedIn ? <RoundOverview /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/scorecards/:scorecardId(\\d+)/overview/edit\" exact>\r\n                {isLoggedIn ? <RoundOverview /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            <Route path=\"/login\">\r\n                <Login />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n                <Register />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default ApplicationViews;","import React, { useContext } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavLink,\r\n    NavItem,\r\n} from \"reactstrap\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faTable, faFlag, faDotCircle, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst tabs = [{\r\n    route: \"/\",\r\n    icon: faHome,\r\n    label: \"Home\"\r\n}, {\r\n    route: \"/scorecards\",\r\n    icon: faTable,\r\n    label: \"Scorecards\"\r\n}, {\r\n    route: \"/courses\",\r\n    icon: faFlag,\r\n    label: \"Courses\"\r\n}, {\r\n    route: \"/discs\",\r\n    icon: faDotCircle,\r\n    label: \"Discs\"\r\n}]\r\n\r\nexport const Navigation = () => {\r\n    const { getCurrentUser, logout } = useContext(UserContext);\r\n    const user = getCurrentUser();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const logoutAndReturn = () => {\r\n        return logout().then(() => {\r\n            toast.dark(\"You are now logged out\");\r\n            history.push(\"/login\");\r\n        });\r\n    };\r\n\r\n    return (\r\n        < div >\r\n            {/* Top Bar*/}\r\n            <Navbar className=\"navbar-dark fixed-top bg-primary d-flex justify-content-center justify-content-lg-start\" expand=\"md\">\r\n                {(user && location.pathname.startsWith(\"/discs/\")) && (\r\n                    <Nav className=\"mr-auto d-flex d-md-none\" navbar>\r\n                        <NavItem>\r\n                            <NavLink onClick={() => history.push(\"/discs\")}>\r\n                                Cancel\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                )}\r\n                {(user && location.pathname === \"/scorecards/courses\") && (\r\n                    <Nav className=\"mr-auto d-flex d-md-none\" navbar>\r\n                        <NavItem>\r\n                            <NavLink onClick={() => history.push(\"/scorecards\")}>\r\n                                Cancel\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                )}\r\n                {(user && location.pathname.includes(\"/courses/\")) && (\r\n                    <Nav className=\"mr-auto d-flex d-md-none\" navbar>\r\n                        <NavItem>\r\n                            <NavLink onClick={() => {\r\n                                location.pathname.startsWith(\"/scorecards\") ?\r\n                                    history.push(\"/scorecards/courses\")\r\n                                    : history.push(\"/courses\")\r\n                            }}>\r\n                                Back\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                )}\r\n                <NavbarBrand tag={Link} to=\"/\">\r\n                    <img\r\n                        id=\"header-logo\"\r\n                        src=\"/disc-logo.png\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"mr-1\"\r\n                        alt=\"Disc Stats Logo\"\r\n                    />\r\n                    Disc Stats\r\n                </NavbarBrand>\r\n                <Nav className=\"d-lg-flex d-none w-100\" navbar>\r\n                    {user ? (\r\n                        <>\r\n                            <NavItem>\r\n                                <NavLink to=\"/scorecards\" tag={Link}>\r\n                                    Scorecards\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to=\"/courses\" tag={Link}>\r\n                                    Courses\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to=\"/discs\" tag={Link}>\r\n                                    Discs\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem className=\"ml-auto\">\r\n                                <NavLink onClick={logoutAndReturn}>Logout</NavLink>\r\n                            </NavItem>\r\n                        </>\r\n                    ) : (\r\n                            <>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/login\" tag={Link}>\r\n                                        Login\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/register\" tag={Link}>\r\n                                        Register\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </>\r\n                        )}\r\n                </Nav>\r\n                {(user && location.pathname === \"/\") && (\r\n                    <Nav className=\"ml-auto mr-3 d-lg-none d-flex\" navbar>\r\n                        <NavItem>\r\n                            <NavLink onClick={logoutAndReturn}>\r\n                                <div className=\"row d-flex flex-column justify-content-center align-items-center\">\r\n                                    <FontAwesomeIcon size=\"lg\" icon={faSignOutAlt} />\r\n                                    <div className=\"bottom-tab-label\">Logout</div>\r\n                                </div>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                )}\r\n            </Navbar>\r\n\r\n            {/* Bottom Tab Navigator*/}\r\n            {user && (\r\n                <Navbar className=\"fixed-bottom navbar-light bg-light d-block d-lg-none\">\r\n                    <Nav className=\"d-flex flex-row justify-content-around w-100\" navbar>\r\n                        {\r\n                            tabs.map((tab, index) => (\r\n                                <NavItem key={`tab-${index}`}>\r\n                                    <NavLink to={tab.route} tag={Link}>\r\n                                        <div className=\"row d-flex flex-column justify-content-center align-items-center\">\r\n                                            <FontAwesomeIcon size=\"lg\" icon={tab.icon} />\r\n                                            <div className=\"bottom-tab-label\">{tab.label}</div>\r\n                                        </div>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            ))\r\n                        }\r\n                    </Nav>\r\n                </Navbar>\r\n            )}\r\n        </div >\r\n    );\r\n};","import { BrowserRouter as Router } from \"react-router-dom\";\nimport ApplicationViews from \"./components/ApplicationViews\";\nimport { UserProvider } from \"./providers/UserProvider\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Navigation } from \"../src/components/Navigation\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer closeOnClick autoClose={3000} position=\"bottom-right\" hideProgressBar />\n      <UserProvider>\n        <Router>\n          <Navigation />\n          <ApplicationViews />\n        </Router>\n      </UserProvider>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase/app\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n};\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}