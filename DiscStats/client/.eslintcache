[{"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\index.js":"1","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\App.js":"2","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\reportWebVitals.js":"3","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Register.js":"5","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Login.js":"6","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Home.js":"7","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\providers\\UserProvider.js":"8","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\Navigation.js":"9","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\CourseManager.js":"10","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\ScorecardManager.js":"11","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\DiscManager.js":"12","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\DiscCard.js":"13","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\getWindowDimensions.js":"14","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\DiscForm.js":"15","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\CourseCard.js":"16","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ScorecardCard.js":"17","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\dateFormatter.js":"18","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\groupBy.js":"19","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ScoreBar.js":"20","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\CourseSearch.js":"21","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\CourseDetails.js":"22","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\DiscFilter.js":"23","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\HoleDetails.js":"24","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\ShotForm.js":"25"},{"size":694,"mtime":1612194816500,"results":"26","hashOfConfig":"27"},{"size":647,"mtime":1612214791668,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":2695,"mtime":1612723974663,"results":"30","hashOfConfig":"27"},{"size":3837,"mtime":1612284695957,"results":"31","hashOfConfig":"27"},{"size":2909,"mtime":1612284663675,"results":"32","hashOfConfig":"27"},{"size":4672,"mtime":1612564016173,"results":"33","hashOfConfig":"27"},{"size":3403,"mtime":1611952773672,"results":"34","hashOfConfig":"27"},{"size":6789,"mtime":1612474679139,"results":"35","hashOfConfig":"27"},{"size":2251,"mtime":1612475956146,"results":"36","hashOfConfig":"27"},{"size":1842,"mtime":1612558373582,"results":"37","hashOfConfig":"27"},{"size":2633,"mtime":1612539448371,"results":"38","hashOfConfig":"27"},{"size":1542,"mtime":1612384667525,"results":"39","hashOfConfig":"27"},{"size":650,"mtime":1612296988603,"results":"40","hashOfConfig":"27"},{"size":9302,"mtime":1612726038971,"results":"41","hashOfConfig":"27"},{"size":1685,"mtime":1612558373524,"results":"42","hashOfConfig":"27"},{"size":2682,"mtime":1612721300757,"results":"43","hashOfConfig":"27"},{"size":208,"mtime":1612380112435,"results":"44","hashOfConfig":"27"},{"size":172,"mtime":1612561663110,"results":"45","hashOfConfig":"27"},{"size":2206,"mtime":1612564297459,"results":"46","hashOfConfig":"27"},{"size":1820,"mtime":1612539179921,"results":"47","hashOfConfig":"27"},{"size":9030,"mtime":1612721300704,"results":"48","hashOfConfig":"27"},{"size":997,"mtime":1612539480446,"results":"49","hashOfConfig":"27"},{"size":3854,"mtime":1612726711908,"results":"50","hashOfConfig":"27"},{"size":14233,"mtime":1612728297369,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1401a8f",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\index.js",[],["105","106"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\App.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\reportWebVitals.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Register.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Login.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Home.js",["107","108","109","110"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\providers\\UserProvider.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\Navigation.js",["111"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\CourseManager.js",["112","113","114","115"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\ScorecardManager.js",["116"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport { ScorecardCard } from \"../components/ScorecardCard\";\r\nimport { Button } from \"reactstrap\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const ScorecardManager = () => {\r\n    const [scorecards, setScorecards] = useState([]);\r\n    const { getToken } = useContext(UserContext);\r\n    const { width } = useWindowDimensions();\r\n    const history = useHistory();\r\n\r\n    const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/scorecard/${currentUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedScorecards) => {\r\n                    setScorecards(parsedScorecards);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Scorecards</h2>\r\n            <Button type=\"button\"\r\n                block={width < 992}\r\n                onClick={() => history.push(\"/scorecards/courses\")}\r\n                color=\"danger\">New Scorecard</Button>\r\n            <div className=\"row justify-content-center\">\r\n                {\r\n                    scorecards.map(scorecard => {\r\n                        return (\r\n                            <div key={scorecard.id} className=\"m-4\">\r\n                                <ScorecardCard scorecard={scorecard} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\DiscManager.js",["117"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\DiscCard.js",["118"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\getWindowDimensions.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\DiscForm.js",["119","120"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\CourseCard.js",["121"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ScorecardCard.js",["122","123","124","125"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\dateFormatter.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\groupBy.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ScoreBar.js",["126"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\CourseSearch.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\CourseDetails.js",["127","128","129","130","131","132","133"],"import { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const CourseDetails = () => {\r\n    const [course, setCourse] = useState({});\r\n    const [holes, setHoles] = useState([]);\r\n    const [scorecards, setScorecards] = useState([]);\r\n    const [shotTotals, setShotTotals] = useState([]);\r\n    const [allConditions, setAllConditions] = useState([]);\r\n    const [conditionsId, setConditionsId] = useState(0);\r\n    const [par, setPar] = useState();\r\n    const [distance, setDistance] = useState();\r\n    const [average, setAverage] = useState();\r\n    const [best, setBest] = useState();\r\n    const { getToken } = useContext(UserContext);\r\n    const { width } = useWindowDimensions();\r\n    const location = useLocation();\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/course/${params.courseId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedCourse) => {\r\n                    setCourse(parsedCourse);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/conditions`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedConditions) => {\r\n                    setAllConditions(parsedConditions);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (course.id) {\r\n            getToken().then((token) =>\r\n                fetch(`/api/hole/course/${params.courseId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((parsedCourse) => {\r\n                        setHoles(parsedCourse);\r\n                    })\r\n            );\r\n        }\r\n    }, [course]);\r\n\r\n    useEffect(() => {\r\n        if (course.id) {\r\n            getToken().then((token) =>\r\n                fetch(`/api/scorecard/course/${params.courseId}/${currentUserId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((parsedScorecards) => {\r\n                        setScorecards(parsedScorecards);\r\n                    })\r\n            );\r\n        }\r\n    }, [course]);\r\n\r\n    useEffect(() => {\r\n        if (holes.length) {\r\n            const holePars = [];\r\n            const holeLengths = [];\r\n            holes.forEach(hole => {\r\n                holePars.push(hole.par)\r\n                holeLengths.push(hole.distance)\r\n            });\r\n            setPar(holePars.reduce((acc, cur) => acc + cur));\r\n            setDistance(holeLengths.reduce((acc, cur) => acc + cur));\r\n        }\r\n    }, [holes]);\r\n\r\n    useEffect(() => {\r\n        if (scorecards.length) {\r\n            scorecards.map(scorecard => {\r\n                getToken().then((token) =>\r\n                    fetch(`/api/shot/scorecard/${scorecard.id}`, {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    })\r\n                        .then((res) => res.json())\r\n                        .then((parsedShots) => {\r\n                            setShotTotals([...shotTotals, parsedShots.length]);\r\n                        })\r\n                );\r\n            })\r\n        }\r\n    }, [scorecards]);\r\n\r\n    useEffect(() => {\r\n        if (shotTotals.length && (shotTotals.length === scorecards.length) && par) {\r\n            const totalShots = shotTotals.reduce((acc, cur) => acc + cur);\r\n            const roundAverage = totalShots / shotTotals.length;\r\n            const totalAverage = Math.round(roundAverage - par);\r\n            setAverage(totalAverage < 0 ? totalAverage : totalAverage === 0 ? \"E\" : `+${totalAverage}`)\r\n            setBest(Math.min(shotTotals));\r\n        }\r\n    }, [shotTotals, par]);\r\n\r\n    const addScorecard = (scorecard) => {\r\n        getToken().then((token) =>\r\n            fetch(\"/api/scorecard\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(scorecard),\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => history.push(`/scorecards/${data.id}/${holes.find(hole => hole.number === 1).id}`))\r\n        );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (parseInt(conditionsId) === 0) {\r\n            toast.error(\"Enter conditions\", { position: \"top:center\" });\r\n        } else {\r\n            addScorecard({\r\n                courseId: params.courseId,\r\n                conditionsId: conditionsId,\r\n                userId: parseInt(currentUserId)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <Link to={location.pathname.includes(\"scorecards\") ? \"/scorecards/courses\" : \"/courses\"}\r\n                    className=\"mt-4 ml-5 d-none d-md-flex\"\r\n                >\r\n                    <FontAwesomeIcon size=\"lg\" className=\"ml-2 text-secondary cancel\" icon={faArrowLeft} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"container mt-4 mt-md-0\">\r\n                <h3>{course.name}</h3>\r\n                <div>\r\n                    <p className=\"text-left\"><strong>Location:</strong> {course.location}</p>\r\n                    <p className=\"text-left\"><strong>Description:</strong> {course.description}</p>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <p className=\"text-left col-4\"><strong>Par:</strong> {par}</p>\r\n                    <p className=\"text-left col-4\"><strong>Distance:</strong> {distance}ft</p>\r\n                    <p className=\"text-left col-4\"><strong># of holes:</strong> {holes.length}</p>\r\n                    <p className=\"text-left col-4\"><strong>Times played:</strong> {scorecards.length}</p>\r\n                    <p className=\"text-left col-4\"><strong>Avg score:</strong> {scorecards.length ? average : \"N/A\"}</p>\r\n                    <p className=\"text-left col-4\"><strong>Best score:</strong> {scorecards.length ? best : \"N/A\"}</p>\r\n                </div>\r\n                <hr />\r\n                {location.pathname.includes(\"scorecards\") && (\r\n                    <>\r\n                        <Form className={width > 576 ? (width < 992 ? \"my-4 mx-auto w-75\" : \"mt-4 mx-auto w-25\") : \"my-4 mx-3\"}\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <FormGroup row>\r\n                                <Label>\r\n                                    Current Conditions\r\n                                </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"conditionsId\"\r\n                                    onChange={(e) => setConditionsId(e.target.value)}\r\n                                    required=\"required\"\r\n                                    value={conditionsId}\r\n                                >\r\n                                    <option value=\"0\" hidden>Select conditions</option>\r\n                                    {\r\n                                        allConditions.map((c) => (\r\n                                            <option value={c.id} key={c.id}>\r\n                                                {c.label}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <Button color=\"danger\" type=\"submit\" block={width < 992}>Start Round</Button>\r\n                        </Form>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\DiscFilter.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\HoleDetails.js",["134","135"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\ShotForm.js",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":29,"column":8,"nodeType":"144","endLine":29,"endColumn":10,"suggestions":"145"},{"ruleId":"142","severity":1,"message":"143","line":44,"column":8,"nodeType":"144","endLine":44,"endColumn":10,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":58,"column":38,"nodeType":"149","messageId":"150","endLine":58,"endColumn":40},{"ruleId":"147","severity":1,"message":"148","line":59,"column":35,"nodeType":"149","messageId":"150","endLine":59,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":10,"column":5,"nodeType":"153","messageId":"154","endLine":10,"endColumn":15},{"ruleId":"151","severity":1,"message":"155","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":16},{"ruleId":"151","severity":1,"message":"156","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":27},{"ruleId":"151","severity":1,"message":"157","line":6,"column":16,"nodeType":"153","messageId":"154","endLine":6,"endColumn":26},{"ruleId":"142","severity":1,"message":"158","line":31,"column":8,"nodeType":"144","endLine":31,"endColumn":10,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"160","line":29,"column":8,"nodeType":"144","endLine":29,"endColumn":10,"suggestions":"161"},{"ruleId":"142","severity":1,"message":"160","line":32,"column":8,"nodeType":"144","endLine":32,"endColumn":10,"suggestions":"162"},{"ruleId":"142","severity":1,"message":"163","line":23,"column":8,"nodeType":"144","endLine":23,"endColumn":10,"suggestions":"164"},{"ruleId":"142","severity":1,"message":"165","line":58,"column":8,"nodeType":"144","endLine":58,"endColumn":16,"suggestions":"166"},{"ruleId":"142","severity":1,"message":"158","line":73,"column":8,"nodeType":"144","endLine":73,"endColumn":10,"suggestions":"167"},{"ruleId":"142","severity":1,"message":"168","line":24,"column":8,"nodeType":"144","endLine":24,"endColumn":10,"suggestions":"169"},{"ruleId":"142","severity":1,"message":"170","line":26,"column":8,"nodeType":"144","endLine":26,"endColumn":10,"suggestions":"171"},{"ruleId":"142","severity":1,"message":"172","line":41,"column":8,"nodeType":"144","endLine":41,"endColumn":10,"suggestions":"173"},{"ruleId":"142","severity":1,"message":"174","line":48,"column":8,"nodeType":"144","endLine":48,"endColumn":31,"suggestions":"175"},{"ruleId":"142","severity":1,"message":"176","line":54,"column":8,"nodeType":"144","endLine":54,"endColumn":15,"suggestions":"177"},{"ruleId":"142","severity":1,"message":"178","line":64,"column":8,"nodeType":"144","endLine":64,"endColumn":24,"suggestions":"179"},{"ruleId":"142","severity":1,"message":"180","line":42,"column":8,"nodeType":"144","endLine":42,"endColumn":10,"suggestions":"181"},{"ruleId":"142","severity":1,"message":"158","line":57,"column":8,"nodeType":"144","endLine":57,"endColumn":10,"suggestions":"182"},{"ruleId":"142","severity":1,"message":"180","line":74,"column":8,"nodeType":"144","endLine":74,"endColumn":16,"suggestions":"183"},{"ruleId":"142","severity":1,"message":"184","line":91,"column":8,"nodeType":"144","endLine":91,"endColumn":16,"suggestions":"185"},{"ruleId":"147","severity":1,"message":"148","line":108,"column":38,"nodeType":"149","messageId":"150","endLine":108,"endColumn":40},{"ruleId":"142","severity":1,"message":"186","line":123,"column":8,"nodeType":"144","endLine":123,"endColumn":20,"suggestions":"187"},{"ruleId":"142","severity":1,"message":"188","line":133,"column":8,"nodeType":"144","endLine":133,"endColumn":25,"suggestions":"189"},{"ruleId":"142","severity":1,"message":"190","line":31,"column":8,"nodeType":"144","endLine":31,"endColumn":10,"suggestions":"191"},{"ruleId":"142","severity":1,"message":"190","line":48,"column":8,"nodeType":"144","endLine":48,"endColumn":14,"suggestions":"192"},{"ruleId":"142","severity":1,"message":"193","line":62,"column":8,"nodeType":"144","endLine":62,"endColumn":23,"suggestions":"194"},{"ruleId":"142","severity":1,"message":"195","line":121,"column":8,"nodeType":"144","endLine":121,"endColumn":10,"suggestions":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.id' and 'getToken'. Either include them or remove the dependency array.","ArrayExpression",["199"],["200"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'NavbarText' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useWindowDimensions' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'currentUserId' and 'getToken'. Either include them or remove the dependency array.",["202"],["203"],"React Hook useEffect has missing dependencies: 'disc.id' and 'getToken'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has a missing dependency: 'getDiscById'. Either include it or remove the dependency array.",["205"],["206"],"React Hook useEffect has missing dependencies: 'course.id', 'getToken', and 'userId'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has missing dependencies: 'getToken' and 'scorecard.id'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'getToken' and 'scorecard.courseId'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'findScore'. Either include it or remove the dependency array.",["210"],"React Hook useEffect has missing dependencies: 'roundScores' and 'setRoundScores'. Either include them or remove the dependency array. If 'setRoundScores' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["211"],"React Hook useEffect has missing dependencies: 'names', 'params', and 'scoreBreakdown'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'getToken' and 'params.courseId'. Either include them or remove the dependency array.",["213"],["214"],["215"],"React Hook useEffect has missing dependencies: 'currentUserId', 'getToken', and 'params.courseId'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'getToken' and 'shotTotals'. Either include them or remove the dependency array. You can also do a functional update 'setShotTotals(s => ...)' if you only need 'shotTotals' in the 'setShotTotals' call.",["217"],"React Hook useEffect has a missing dependency: 'scorecards.length'. Either include it or remove the dependency array.",["218"],"React Hook useEffect has missing dependencies: 'getToken' and 'params.holeId'. Either include them or remove the dependency array.",["219"],["220"],"React Hook useEffect has a missing dependency: 'getShotById'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'getToken' and 'userId'. Either include them or remove the dependency array.",["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"223","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"228","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"226","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"226","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [currentUser.id, getToken]",{"range":"267","text":"268"},{"range":"269","text":"268"},"Update the dependencies array to be: [getToken]",{"range":"270","text":"271"},"Update the dependencies array to be: [currentUserId, getToken]",{"range":"272","text":"273"},{"range":"274","text":"273"},"Update the dependencies array to be: [disc.id, getToken]",{"range":"275","text":"276"},"Update the dependencies array to be: [discId, getDiscById]",{"range":"277","text":"278"},{"range":"279","text":"271"},"Update the dependencies array to be: [course.id, getToken, userId]",{"range":"280","text":"281"},"Update the dependencies array to be: [getToken, scorecard.id]",{"range":"282","text":"283"},"Update the dependencies array to be: [getToken, scorecard.courseId]",{"range":"284","text":"285"},"Update the dependencies array to be: [findScore, holes, scorecardShots]",{"range":"286","text":"287"},"Update the dependencies array to be: [roundScores, score, setRoundScores]",{"range":"288","text":"289"},"Update the dependencies array to be: [chartContainer, names, params, scoreBreakdown]",{"range":"290","text":"291"},"Update the dependencies array to be: [getToken, params.courseId]",{"range":"292","text":"293"},{"range":"294","text":"271"},"Update the dependencies array to be: [course, getToken, params.courseId]",{"range":"295","text":"296"},"Update the dependencies array to be: [course, currentUserId, getToken, params.courseId]",{"range":"297","text":"298"},"Update the dependencies array to be: [getToken, scorecards, shotTotals]",{"range":"299","text":"300"},"Update the dependencies array to be: [shotTotals, par, scorecards.length]",{"range":"301","text":"302"},"Update the dependencies array to be: [getToken, params.holeId]",{"range":"303","text":"304"},"Update the dependencies array to be: [getToken, hole, params.holeId]",{"range":"305","text":"306"},"Update the dependencies array to be: [getShotById, params.shotId]",{"range":"307","text":"308"},"Update the dependencies array to be: [getToken, userId]",{"range":"309","text":"310"},[1070,1072],"[currentUser.id, getToken]",[1529,1531],[1212,1214],"[getToken]",[1097,1099],"[currentUserId, getToken]",[1211,1213],[783,785],"[disc.id, getToken]",[2067,2075],"[discId, getDiscById]",[2488,2490],[856,858],"[course.id, getToken, userId]",[986,988],"[getToken, scorecard.id]",[1422,1424],"[getToken, scorecard.courseId]",[1552,1575],"[findScore, holes, scorecardShots]",[1702,1709],"[roundScores, score, setRoundScores]",[2119,2135],"[chartContainer, names, params, scoreBreakdown]",[1754,1756],"[getToken, params.courseId]",[2199,2201],[2726,2734],"[course, getToken, params.courseId]",[3301,3309],"[course, currentUserId, getToken, params.courseId]",[4415,4427],"[getToken, scorecards, shotTotals]",[4917,4934],"[shotTotals, par, scorecards.length]",[1137,1139],"[getToken, params.holeId]",[1660,1666],"[getToken, hole, params.holeId]",[2321,2336],"[getShotById, params.shotId]",[4524,4526],"[getToken, userId]"]