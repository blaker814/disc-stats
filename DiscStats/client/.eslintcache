[{"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\index.js":"1","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\App.js":"2","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\reportWebVitals.js":"3","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Register.js":"5","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Login.js":"6","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Home.js":"7","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\providers\\UserProvider.js":"8","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\Navigation.js":"9","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\CourseManager.js":"10","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\ScorecardManager.js":"11","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\DiscManager.js":"12","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\DiscCard.js":"13","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\getWindowDimensions.js":"14","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\DiscForm.js":"15","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\CourseCard.js":"16","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ScorecardCard.js":"17","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\dateFormatter.js":"18","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\groupBy.js":"19","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ScoreBar.js":"20","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\CourseSearch.js":"21","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\CourseDetails.js":"22","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\DiscFilter.js":"23","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\HoleDetails.js":"24"},{"size":694,"mtime":1612194816500,"results":"25","hashOfConfig":"26"},{"size":647,"mtime":1612214791668,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":2472,"mtime":1612558856697,"results":"29","hashOfConfig":"26"},{"size":3837,"mtime":1612284695957,"results":"30","hashOfConfig":"26"},{"size":2909,"mtime":1612284663675,"results":"31","hashOfConfig":"26"},{"size":4672,"mtime":1612564016173,"results":"32","hashOfConfig":"26"},{"size":3403,"mtime":1611952773672,"results":"33","hashOfConfig":"26"},{"size":6789,"mtime":1612474679139,"results":"34","hashOfConfig":"26"},{"size":2251,"mtime":1612475956146,"results":"35","hashOfConfig":"26"},{"size":1842,"mtime":1612558373582,"results":"36","hashOfConfig":"26"},{"size":2633,"mtime":1612539448371,"results":"37","hashOfConfig":"26"},{"size":1542,"mtime":1612384667525,"results":"38","hashOfConfig":"26"},{"size":650,"mtime":1612296988603,"results":"39","hashOfConfig":"26"},{"size":9303,"mtime":1612554601003,"results":"40","hashOfConfig":"26"},{"size":1685,"mtime":1612558373524,"results":"41","hashOfConfig":"26"},{"size":2675,"mtime":1612386704482,"results":"42","hashOfConfig":"26"},{"size":208,"mtime":1612380112435,"results":"43","hashOfConfig":"26"},{"size":172,"mtime":1612561663110,"results":"44","hashOfConfig":"26"},{"size":2206,"mtime":1612564297459,"results":"45","hashOfConfig":"26"},{"size":1820,"mtime":1612539179921,"results":"46","hashOfConfig":"26"},{"size":11330,"mtime":1612565362897,"results":"47","hashOfConfig":"26"},{"size":997,"mtime":1612539480446,"results":"48","hashOfConfig":"26"},{"size":60,"mtime":1612558834239,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1401a8f",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\index.js",[],["101","102"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\App.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\reportWebVitals.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Register.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Login.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\Home.js",["103","104","105","106"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\providers\\UserProvider.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\Navigation.js",["107"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\CourseManager.js",["108","109","110","111"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\ScorecardManager.js",["112"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport { ScorecardCard } from \"../components/ScorecardCard\";\r\nimport { Button } from \"reactstrap\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const ScorecardManager = () => {\r\n    const [scorecards, setScorecards] = useState([]);\r\n    const { getToken } = useContext(UserContext);\r\n    const { width } = useWindowDimensions();\r\n    const history = useHistory();\r\n\r\n    const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/scorecard/${currentUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((parsedScorecards) => {\r\n                    setScorecards(parsedScorecards);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Scorecards</h2>\r\n            <Button type=\"button\"\r\n                block={width < 992}\r\n                onClick={() => history.push(\"/scorecards/courses\")}\r\n                color=\"danger\">New Scorecard</Button>\r\n            <div className=\"row justify-content-center\">\r\n                {\r\n                    scorecards.map(scorecard => {\r\n                        return (\r\n                            <div key={scorecard.id} className=\"m-4\">\r\n                                <ScorecardCard scorecard={scorecard} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\DiscManager.js",["113"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\DiscCard.js",["114"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\getWindowDimensions.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\DiscForm.js",["115","116"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, ModalBody, ModalFooter, Modal, ModalHeader } from \"reactstrap\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport useWindowDimensions from \"../utils/getWindowDimensions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const DiscForm = () => {\r\n    const { getToken } = useContext(UserContext);\r\n    const [discTypes, setDiscTypes] = useState([]);\r\n    const [disc, setDisc] = useState({});\r\n    const [pendingDelete, setPendingDelete] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { width } = useWindowDimensions();\r\n\r\n    const { discId } = useParams();\r\n    const history = useHistory();\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    //get Disc\r\n    const getDiscbyId = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/disc/edit/${discId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    if (res.status === 404) {\r\n                        toast.error(\"That's not your disc\");\r\n                        history.push(\"/discs\");\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    setDisc(data);\r\n                })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (discId) {\r\n            getDiscbyId();\r\n            setIsLoading(false);\r\n        } else {\r\n            setIsLoading(false);\r\n            setDisc({\r\n                name: \"\",\r\n                weight: 0,\r\n                plastic: \"\",\r\n                discTypeId: 0\r\n            });\r\n        }\r\n    }, [discId]);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token) =>\r\n            fetch(\"/api/discType\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setDiscTypes(data);\r\n                })\r\n        );\r\n    }, []);\r\n\r\n    const addDisc = (disc) => {\r\n        getToken().then((token) => {\r\n            return fetch(\"/api/disc\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(disc),\r\n            }).then(() => history.push(\"/discs\"));\r\n        });\r\n    };\r\n\r\n    const updateDisc = (disc) => {\r\n        getToken().then((token) => {\r\n            return fetch(`/api/disc/${disc.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(disc),\r\n            }).then(() => history.push(\"/discs\"));\r\n        });\r\n    };\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newDisc = { ...disc };\r\n        newDisc[event.target.name] = event.target.value;\r\n        setDisc(newDisc);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (parseInt(disc.discTypeId) === 0) {\r\n            toast.error(\"Enter a disc type\", { position: \"top:center\" });\r\n        } else {\r\n            setIsLoading(true);\r\n            if (discId) {\r\n                updateDisc({\r\n                    id: disc.id,\r\n                    name: disc.name,\r\n                    weight: disc.weight,\r\n                    plastic: disc.plastic,\r\n                    IsActive: true,\r\n                    userId: parseInt(userId),\r\n                    discTypeId: disc.discTypeId\r\n                });\r\n            } else {\r\n                addDisc({\r\n                    name: disc.name,\r\n                    weight: disc.weight,\r\n                    plastic: disc.plastic,\r\n                    IsActive: true,\r\n                    userId: parseInt(userId),\r\n                    discTypeId: disc.discTypeId\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/disc/${disc.id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => history.push(\"/discs\"))\r\n        );\r\n        setPendingDelete(false);\r\n    };\r\n\r\n    if (disc?.id) {\r\n        if (disc?.userId !== parseInt(userId)) {\r\n            return (\r\n                <>\r\n                    <h1>This is not your disc to edit</h1>\r\n                    <Button>\r\n                        <Link to={\"/myDisc\"}>Go Back</Link>\r\n                    </Button>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={width < 768 ? \"container my-5\" : \"container border border-dark my-5 bg-light\"} style={{ minWidth: \"20em\", maxWidth: \"25em\" }}>\r\n            <Link to={\"/discs\"} className=\"row d-none d-md-flex\" disabled={isLoading}>\r\n                <FontAwesomeIcon size=\"lg\" className=\"ml-auto mt-1 mr-2 text-secondary cancel\" icon={faTimes} />\r\n            </Link>\r\n            <Form className=\"p-5 mt-n5\" onSubmit={handleSubmit}>\r\n                {discId ? <h2>Edit Disc</h2> : <h2>Add Disc</h2>}\r\n                <FormGroup row>\r\n                    <Label for=\"name\">\r\n                        Name\r\n                    </Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"discName\"\r\n                        name=\"name\"\r\n                        autoFocus\r\n                        placeholder=\"Name\"\r\n                        className=\"form-control\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        defaultValue={disc?.name}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label>\r\n                        Type\r\n                    </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"discTypeId\"\r\n                        onChange={handleControlledInputChange}\r\n                        required=\"required\"\r\n                        value={disc?.discTypeId}\r\n                    >\r\n                        <option value=\"0\" hidden>Select a type</option>\r\n                        {\r\n                            discTypes.map((dt) => (\r\n                                <option value={dt.id} key={dt.id}>\r\n                                    {dt.label}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"content\">\r\n                        Plastic\r\n                    </Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"plastic\"\r\n                        placeholder=\"Plastic\"\r\n                        onChange={handleControlledInputChange}\r\n                        defaultValue={disc?.plastic}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"content\">\r\n                        Weight\r\n                    </Label>\r\n                    <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        onChange={handleControlledInputChange}\r\n                        defaultValue={disc?.weight}\r\n                    />\r\n                </FormGroup>\r\n                <Button block={width < 992} type=\"submit\" className=\"mt-4 mr-3\" color=\"danger\" disabled={isLoading}>\r\n                    {discId ? \"Save\" : \"Submit\"}\r\n                </Button>\r\n                {discId && (\r\n                    <Button block={width < 992}\r\n                        onClick={(e) => setPendingDelete(true)}\r\n                        className=\"mt-4\"\r\n                        color=\"dark\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                )}\r\n            </Form>\r\n            <Modal isOpen={pendingDelete}>\r\n                <ModalHeader>Delete {disc.name}?</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure you want to delete this disc? This action cannot be\r\n                    undone.\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button outline onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n                    <Button color=\"dark\" onClick={handleDelete}>\r\n                        Yes, Delete\r\n                </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};","C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\CourseCard.js",["117"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ScorecardCard.js",["118","119","120","121"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\dateFormatter.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\utils\\groupBy.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\ScoreBar.js",["122"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\CourseSearch.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\CourseDetails.js",["123","124","125","126","127","128","129","130"],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\components\\DiscFilter.js",[],"C:\\Users\\rab01\\workspace\\DiscStats\\DiscStats\\client\\src\\pages\\HoleDetails.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":29,"column":8,"nodeType":"137","endLine":29,"endColumn":10,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"136","line":44,"column":8,"nodeType":"137","endLine":44,"endColumn":10,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":58,"column":38,"nodeType":"142","messageId":"143","endLine":58,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":59,"column":35,"nodeType":"142","messageId":"143","endLine":59,"endColumn":37},{"ruleId":"144","severity":1,"message":"145","line":10,"column":5,"nodeType":"146","messageId":"147","endLine":10,"endColumn":15},{"ruleId":"144","severity":1,"message":"148","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":16},{"ruleId":"144","severity":1,"message":"149","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":27},{"ruleId":"144","severity":1,"message":"150","line":6,"column":16,"nodeType":"146","messageId":"147","endLine":6,"endColumn":26},{"ruleId":"135","severity":1,"message":"151","line":31,"column":8,"nodeType":"137","endLine":31,"endColumn":10,"suggestions":"152"},{"ruleId":"135","severity":1,"message":"153","line":29,"column":8,"nodeType":"137","endLine":29,"endColumn":10,"suggestions":"154"},{"ruleId":"135","severity":1,"message":"153","line":32,"column":8,"nodeType":"137","endLine":32,"endColumn":10,"suggestions":"155"},{"ruleId":"135","severity":1,"message":"156","line":23,"column":8,"nodeType":"137","endLine":23,"endColumn":10,"suggestions":"157"},{"ruleId":"135","severity":1,"message":"158","line":58,"column":8,"nodeType":"137","endLine":58,"endColumn":16,"suggestions":"159"},{"ruleId":"135","severity":1,"message":"151","line":73,"column":8,"nodeType":"137","endLine":73,"endColumn":10,"suggestions":"160"},{"ruleId":"135","severity":1,"message":"161","line":24,"column":8,"nodeType":"137","endLine":24,"endColumn":10,"suggestions":"162"},{"ruleId":"135","severity":1,"message":"163","line":26,"column":8,"nodeType":"137","endLine":26,"endColumn":10,"suggestions":"164"},{"ruleId":"135","severity":1,"message":"165","line":41,"column":8,"nodeType":"137","endLine":41,"endColumn":10,"suggestions":"166"},{"ruleId":"135","severity":1,"message":"167","line":48,"column":8,"nodeType":"137","endLine":48,"endColumn":31,"suggestions":"168"},{"ruleId":"135","severity":1,"message":"169","line":54,"column":8,"nodeType":"137","endLine":54,"endColumn":15,"suggestions":"170"},{"ruleId":"135","severity":1,"message":"171","line":64,"column":8,"nodeType":"137","endLine":64,"endColumn":24,"suggestions":"172"},{"ruleId":"135","severity":1,"message":"173","line":46,"column":8,"nodeType":"137","endLine":46,"endColumn":10,"suggestions":"174"},{"ruleId":"135","severity":1,"message":"151","line":61,"column":8,"nodeType":"137","endLine":61,"endColumn":10,"suggestions":"175"},{"ruleId":"135","severity":1,"message":"173","line":78,"column":8,"nodeType":"137","endLine":78,"endColumn":16,"suggestions":"176"},{"ruleId":"135","severity":1,"message":"177","line":95,"column":8,"nodeType":"137","endLine":95,"endColumn":16,"suggestions":"178"},{"ruleId":"140","severity":1,"message":"141","line":112,"column":38,"nodeType":"142","messageId":"143","endLine":112,"endColumn":40},{"ruleId":"135","severity":1,"message":"179","line":128,"column":8,"nodeType":"137","endLine":128,"endColumn":20,"suggestions":"180"},{"ruleId":"140","severity":1,"message":"141","line":143,"column":38,"nodeType":"142","messageId":"143","endLine":143,"endColumn":40},{"ruleId":"135","severity":1,"message":"181","line":188,"column":8,"nodeType":"137","endLine":188,"endColumn":25,"suggestions":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.id' and 'getToken'. Either include them or remove the dependency array.","ArrayExpression",["185"],["186"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'NavbarText' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useWindowDimensions' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'currentUserId' and 'getToken'. Either include them or remove the dependency array.",["188"],["189"],"React Hook useEffect has missing dependencies: 'disc.id' and 'getToken'. Either include them or remove the dependency array.",["190"],"React Hook useEffect has a missing dependency: 'getDiscbyId'. Either include it or remove the dependency array.",["191"],["192"],"React Hook useEffect has missing dependencies: 'course.id', 'getToken', and 'userId'. Either include them or remove the dependency array.",["193"],"React Hook useEffect has missing dependencies: 'getToken' and 'scorecard.id'. Either include them or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'getToken' and 'scorecard.courseId'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'findScore'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'roundScores' and 'setRoundScores'. Either include them or remove the dependency array. If 'setRoundScores' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["197"],"React Hook useEffect has missing dependencies: 'names', 'params', and 'scoreBreakdown'. Either include them or remove the dependency array.",["198"],"React Hook useEffect has missing dependencies: 'getToken' and 'params.courseId'. Either include them or remove the dependency array.",["199"],["200"],["201"],"React Hook useEffect has missing dependencies: 'currentUserId', 'getToken', and 'params.courseId'. Either include them or remove the dependency array.",["202"],"React Hook useEffect has missing dependencies: 'getToken', 'shotTotals', and 'shots'. Either include them or remove the dependency array. You can also do a functional update 'setShots(s => ...)' if you only need 'shots' in the 'setShots' call.",["203"],"React Hook useEffect has a missing dependency: 'scorecards.length'. Either include it or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"205","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"208","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"208","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [currentUser.id, getToken]",{"range":"241","text":"242"},{"range":"243","text":"242"},"Update the dependencies array to be: [getToken]",{"range":"244","text":"245"},"Update the dependencies array to be: [currentUserId, getToken]",{"range":"246","text":"247"},{"range":"248","text":"247"},"Update the dependencies array to be: [disc.id, getToken]",{"range":"249","text":"250"},"Update the dependencies array to be: [discId, getDiscbyId]",{"range":"251","text":"252"},{"range":"253","text":"245"},"Update the dependencies array to be: [course.id, getToken, userId]",{"range":"254","text":"255"},"Update the dependencies array to be: [getToken, scorecard.id]",{"range":"256","text":"257"},"Update the dependencies array to be: [getToken, scorecard.courseId]",{"range":"258","text":"259"},"Update the dependencies array to be: [findScore, holes, scorecardShots]",{"range":"260","text":"261"},"Update the dependencies array to be: [roundScores, score, setRoundScores]",{"range":"262","text":"263"},"Update the dependencies array to be: [chartContainer, names, params, scoreBreakdown]",{"range":"264","text":"265"},"Update the dependencies array to be: [getToken, params.courseId]",{"range":"266","text":"267"},{"range":"268","text":"245"},"Update the dependencies array to be: [course, getToken, params.courseId]",{"range":"269","text":"270"},"Update the dependencies array to be: [course, currentUserId, getToken, params.courseId]",{"range":"271","text":"272"},"Update the dependencies array to be: [getToken, scorecards, shotTotals, shots]",{"range":"273","text":"274"},"Update the dependencies array to be: [shotTotals, par, scorecards.length]",{"range":"275","text":"276"},[1070,1072],"[currentUser.id, getToken]",[1529,1531],[1212,1214],"[getToken]",[1097,1099],"[currentUserId, getToken]",[1211,1213],[783,785],"[disc.id, getToken]",[2067,2075],"[discId, getDiscbyId]",[2488,2490],[856,858],"[course.id, getToken, userId]",[986,988],"[getToken, scorecard.id]",[1415,1417],"[getToken, scorecard.courseId]",[1545,1568],"[findScore, holes, scorecardShots]",[1695,1702],"[roundScores, score, setRoundScores]",[2119,2135],"[chartContainer, names, params, scoreBreakdown]",[1953,1955],"[getToken, params.courseId]",[2398,2400],[2925,2933],"[course, getToken, params.courseId]",[3500,3508],"[course, currentUserId, getToken, params.courseId]",[4678,4690],"[getToken, scorecards, shotTotals, shots]",[6959,6976],"[shotTotals, par, scorecards.length]"]